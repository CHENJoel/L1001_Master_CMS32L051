<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\L1001_Master_CMS32L051.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\L1001_Master_CMS32L051.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sat Nov 25 14:39:09 2023
<BR><P>
<H3>Maximum Stack Usage =       2032 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; wifi_service &rArr; wifi_uart_service &rArr; data_handle &rArr; data_point_handle &rArr; dp_download_handle &rArr; dp_download_issue_cmd_handle &rArr; mcu_download_issue_cmd_handle &rArr; delete_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">SVC_Handler</a><BR>
 <LI><a href="#[12]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">PendSV_Handler</a><BR>
 <LI><a href="#[14]">IRQ00_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">IRQ00_Handler</a><BR>
 <LI><a href="#[15]">IRQ01_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">IRQ01_Handler</a><BR>
 <LI><a href="#[16]">IRQ02_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">IRQ02_Handler</a><BR>
 <LI><a href="#[17]">IRQ03_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">IRQ03_Handler</a><BR>
 <LI><a href="#[18]">IRQ04_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">IRQ04_Handler</a><BR>
 <LI><a href="#[19]">IRQ05_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">IRQ05_Handler</a><BR>
 <LI><a href="#[1a]">IRQ06_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">IRQ06_Handler</a><BR>
 <LI><a href="#[1d]">IRQ09_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">IRQ09_Handler</a><BR>
 <LI><a href="#[20]">IRQ12_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">IRQ12_Handler</a><BR>
 <LI><a href="#[23]">IRQ15_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">IRQ15_Handler</a><BR>
 <LI><a href="#[24]">IRQ16_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">IRQ16_Handler</a><BR>
 <LI><a href="#[2c]">IRQ24_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">IRQ24_Handler</a><BR>
 <LI><a href="#[2d]">IRQ25_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2d]">IRQ25_Handler</a><BR>
 <LI><a href="#[2e]">IRQ26_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2e]">IRQ26_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">HardFault_Handler</a> from main.o(.emb_text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[14]">IRQ00_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[15]">IRQ01_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[16]">IRQ02_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[17]">IRQ03_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[18]">IRQ04_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[19]">IRQ05_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1a]">IRQ06_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1b]">IRQ07_Handler</a> from sci_user.o(i.IRQ07_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1c]">IRQ08_Handler</a> from sci_user.o(i.IRQ08_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1d]">IRQ09_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1e]">IRQ10_Handler</a> from sci_user.o(i.uart0_interrupt_send) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[1f]">IRQ11_Handler</a> from sci_user.o(i.uart0_interrupt_receive) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[20]">IRQ12_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[21]">IRQ13_Handler</a> from sci_user.o(i.uart1_interrupt_send) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[22]">IRQ14_Handler</a> from sci_user.o(i.uart1_interrupt_receive) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[23]">IRQ15_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[24]">IRQ16_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[25]">IRQ17_Handler</a> from tim4_user.o(i.IRQ17_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[26]">IRQ18_Handler</a> from tim4_user.o(i.IRQ18_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[27]">IRQ19_Handler</a> from tim4_user.o(i.IRQ19_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[28]">IRQ20_Handler</a> from tim4_user.o(i.IRQ20_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[29]">IRQ21_Handler</a> from adc_user.o(i.adc_interrupt) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[2a]">IRQ22_Handler</a> from rtc_user.o(i.rtc_interrupt) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[2b]">IRQ23_Handler</a> from rtc_user.o(i.it_interrupt) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[2c]">IRQ24_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[2d]">IRQ25_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[2e]">IRQ26_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[2f]">IRQ27_Handler</a> from tim4_user.o(i.IRQ27_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[30]">IRQ28_Handler</a> from tim4_user.o(i.IRQ28_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[31]">IRQ29_Handler</a> from tim4_user.o(i.IRQ29_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[32]">IRQ30_Handler</a> from tim4_user.o(i.IRQ30_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[33]">IRQ31_Handler</a> from flash_user.o(ram_fetch_code) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[f]">NMI_Handler</a> from wdt_user.o(i.wdt_interrupt) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[12]">PendSV_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[e]">Reset_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[11]">SVC_Handler</a> from startup_cms32l051.o(.text) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[13]">SysTick_Handler</a> from main.o(i.SysTick_Handler) referenced from startup_cms32l051.o(RESET)
 <LI><a href="#[35]">SystemInit</a> from system_cms32l051.o(i.SystemInit) referenced from startup_cms32l051.o(.text)
 <LI><a href="#[3a]">__main</a> from __main.o(!!!main) referenced from startup_cms32l051.o(.text)
 <LI><a href="#[38]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[37]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
 <LI><a href="#[39]">fputc</a> from retarget.o(i.fputc) referenced from _printf_char_file.o(.text)
 <LI><a href="#[34]">hard_fault_handler_c</a> from main.o(i.hard_fault_handler_c) referenced from main.o(.emb_text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3a]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3b]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3d]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[21c]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[21d]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[21e]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[5e]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[3e]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[3f]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent_end
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[41]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[48]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[21f]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[220]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[221]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[43]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 12 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[222]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[223]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[224]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[225]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[226]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[227]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[228]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[229]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[22a]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[22b]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[22c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[22d]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[22e]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[22f]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[230]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[231]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[232]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[233]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[4d]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[234]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[235]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[236]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[237]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[238]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[239]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[23a]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[23b]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[3c]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[23c]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[45]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[47]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[23d]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[49]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 2032 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; wifi_service &rArr; wifi_uart_service &rArr; data_handle &rArr; data_point_handle &rArr; dp_download_handle &rArr; dp_download_issue_cmd_handle &rArr; mcu_download_issue_cmd_handle &rArr; delete_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[23e]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[6d]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[4c]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[23f]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[4e]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[10]"></a>HardFault_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[240]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[e]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>

<P><STRONG><a name="[51]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>

<P><STRONG><a name="[52]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>

<P><STRONG><a name="[11]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>

<P><STRONG><a name="[12]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>IRQ00_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ00_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ00_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>IRQ01_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ01_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ01_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>IRQ02_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ02_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ02_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>IRQ03_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ03_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ03_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>IRQ04_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ04_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ04_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>IRQ05_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ05_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ05_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>IRQ06_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ06_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ06_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>IRQ09_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ09_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ09_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>IRQ12_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ12_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ12_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>IRQ15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ15_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ15_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>IRQ16_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ16_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ16_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>IRQ24_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ24_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ24_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>IRQ25_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ25_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ25_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>IRQ26_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ26_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ26_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_cms32l051.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[54]"></a>__2printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_app_init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hard_fault_handler_c
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_original_effect
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_num_from_playlist_ranklist
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_num_from_effect_ranklist
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_num_from_playlist_ranklist
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_num_from_effect_ranklist
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;download_firmware_to_norflash
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_playlist_ranklist
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_originalef_ranklist
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_favoritesef_ranklist
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_allef_ranklist
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_virtual_device
</UL>

<P><STRONG><a name="[56]"></a>__2sprintf</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firmware_update_flag
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firmware_downloading_flag
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firmware_download_finish_flag
</UL>

<P><STRONG><a name="[67]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[68]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[40]"></a>_printf_int_dec</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[42]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[241]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__printf</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, __printf_flags_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[5f]"></a>srand</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[44]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[1ec]"></a>strcpy</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_built_in_effect
</UL>

<P><STRONG><a name="[1eb]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_built_in_effect
</UL>

<P><STRONG><a name="[60]"></a>__aeabi_memcpy</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, rt_memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_device_detail
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_default_playlist
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_default_global_setting
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_schedule
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_num_from_playlist_ranklist
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_num_from_effect_ranklist
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_schedule_detail_to_com
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_schedule_detail_from_com
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_built_in_ef_to_norflash
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_num_from_playlist_ranklist
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_num_from_effect_ranklist
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_clock_schedule
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_protocol_frame
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_Insert
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_playmode
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reload_current_play_list
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_ranklist
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_efsketch
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_one_efsketch
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_efsketch
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_current_play_efdetail
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_device_indentify
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_built_in_effect
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_play_list
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_preview_effect_data
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_local_effect_data
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bubble_sort_location
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_data_to_first_in_list
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_BufferRead
</UL>

<P><STRONG><a name="[242]"></a>__rt_memcpy</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__aeabi_memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, aeabi_memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_init
</UL>

<P><STRONG><a name="[64]"></a>_memset_w</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr_w
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>

<P><STRONG><a name="[63]"></a>_memset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_device_identify
</UL>

<P><STRONG><a name="[243]"></a>__rt_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_built_in_effect
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_default_playlist
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_schedule
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_num_from_effect_ranklist
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_built_in_ef_to_norflash
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_all_ef_ranklist
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_num_from_effect_ranklist
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_firmware_update_flag
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_ranklist
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_efsketch
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_one_efsketch
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_efsketch
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_device_detail
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_list
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_detial
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_factory_reset
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_originalef_ranklist
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_favoritesef_ranklist
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_allef_ranklist
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_norflash_ranklist
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_firmware_download_flag
</UL>

<P><STRONG><a name="[244]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__rt_memclr_w</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[190]"></a>strcmp</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_factoryreset_effect_norflash
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_first_ota_status
</UL>

<P><STRONG><a name="[245]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frame_Skewing
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameInsert_Calculate
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Tick
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BaudRateCal
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sound_intensity
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_average
</UL>

<P><STRONG><a name="[246]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleColor_Cal
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Display_20ms
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;download_firmware_to_norflash
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Random_Init
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_playdata_COLOR
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;permute_list_in_random
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEX_To_BCD
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_bright_in_range
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Stream
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Reverberate
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Random
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Lightning
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Ignite
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Hopscotch
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Breath
</UL>

<P><STRONG><a name="[247]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>_printf_int_common</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[57]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[37]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>_printf_char_file</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[5a]"></a>__rt_udiv10</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[248]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[249]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[4b]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[24a]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[24b]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>ADC_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a5]"></a>ADC_Set_Clock</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, adc.o(i.ADC_Set_Clock))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a4]"></a>ADC_Set_HardTrigger</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, adc.o(i.ADC_Set_HardTrigger))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>ADC_Start</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, adc.o(i.ADC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_start
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_next_ISR
</UL>

<P><STRONG><a name="[71]"></a>ADC_Stop</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, adc.o(i.ADC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_start
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_next_ISR
</UL>

<P><STRONG><a name="[bd]"></a>BCD_To_HEX</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, master.o(i.BCD_To_HEX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BCD_To_HEX
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_BCD_To_HEX
</UL>

<P><STRONG><a name="[72]"></a>CLK_GetHocoFreq</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, system_cms32l051.o(i.CLK_GetHocoFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CLK_GetHocoFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1f9]"></a>DMA_Enable</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, dma.o(i.DMA_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_app_init
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_interrupt_receive
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_buffer_data
</UL>

<P><STRONG><a name="[da]"></a>DMA_Start</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, dma.o(i.DMA_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DMA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_app_init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_start
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_next_ISR
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_buffer_data
</UL>

<P><STRONG><a name="[d9]"></a>DMA_Stop</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, dma.o(i.DMA_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_next_ISR
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_buffer_data
</UL>

<P><STRONG><a name="[1fa]"></a>DMA_Trigger</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, dma.o(i.DMA_Trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_Trigger
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_buffer_data
</UL>

<P><STRONG><a name="[74]"></a>FLASH_BlockErase</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, driver_w25qxx.o(i.FLASH_BlockErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_BlockErase &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WritenEN
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_delay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25_CS
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_firmware_block
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_firmware_block64K_norflash
</UL>

<P><STRONG><a name="[7a]"></a>FLASH_BufferRead</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, driver_w25qxx.o(i.FLASH_BufferRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Restart
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_delay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25_CS
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_setting
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_schedule_detail
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playlist_ranklist
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playlist_name
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playdetail
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_originalef_ranklist
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_original_effect
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_favoritesef_ranklist
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_effect_verify
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_effect_detail
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_device_identify
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_allef_ranklist
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_all_schedule
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_firmware_chechsum_norflash
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_norflash_ranklist
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_norflash_firmware_version
</UL>

<P><STRONG><a name="[7c]"></a>FLASH_ChipErase</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, driver_w25qxx.o(i.FLASH_ChipErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_ChipErase &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WritenEN
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_delay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25_CS
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_reset_to_zreo
</UL>

<P><STRONG><a name="[7d]"></a>FLASH_PageErase</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, driver_w25qxx.o(i.FLASH_PageErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FLASH_PageErase &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Restart
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WritenEN
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_delay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25_CS
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>

<P><STRONG><a name="[7e]"></a>FLASH_PageWrite</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, driver_w25qxx.o(i.FLASH_PageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Restart
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WritenEN
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_delay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25_CS
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;download_firmware_to_norflash
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>

<P><STRONG><a name="[7f]"></a>FlashROM_BufferRead</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, flashapp.o(i.FlashROM_BufferRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FlashROM_BufferRead &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Restart
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_Insert
</UL>

<P><STRONG><a name="[80]"></a>Flow_Static_Init</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, flow.o(i.Flow_Static_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flow_Static_Init &rArr; Flow_Static
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Static
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_play_video_buffer
</UL>

<P><STRONG><a name="[13]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>debug_K1</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, debug.o(i.debug_K1))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
</UL>

<P><STRONG><a name="[ae]"></a>debug_K1_LONG</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, debug.o(i.debug_K1_LONG))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
</UL>

<P><STRONG><a name="[a7]"></a>debug_K2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, debug.o(i.debug_K2))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
</UL>

<P><STRONG><a name="[a8]"></a>debug_K3</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, debug.o(i.debug_K3))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
</UL>

<P><STRONG><a name="[82]"></a>FlashROM_Insert</STRONG> (Thumb, 196 bytes, Stack size 560 bytes, flashapp.o(i.FlashROM_Insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = FlashROM_Insert &rArr; FlashROM_BufferRead &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramPage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseSector
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Restart
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_BufferRead
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firmware_update_flag
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firmware_downloading_flag
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firmware_download_finish_flag
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_firmware_update_flag
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_firmware_download_flag
</UL>

<P><STRONG><a name="[85]"></a>FlashSPI_Insert</STRONG> (Thumb, 190 bytes, Stack size 304 bytes, flashapp.o(i.FlashSPI_Insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Restart
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_playdetail
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_originalef_ranklist
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_global_setting
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_favoritesef_ranklist
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_effect_verify
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_effect
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_device_identify
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_allef_ranklist
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_all_slave_data
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_all_schedule
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_playlist_ranklist
</UL>

<P><STRONG><a name="[86]"></a>Flow_Breath</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, flow.o(i.Flow_Breath))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Flow_Breath &rArr; ModuleColor_Cal &rArr; FrameInsert_Calculate
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleColor_Cal
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frame_Skewing
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_flow
</UL>

<P><STRONG><a name="[181]"></a>Flow_Breath_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, flow.o(i.Flow_Breath_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flow_Breath_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_play_video_buffer
</UL>

<P><STRONG><a name="[8a]"></a>Flow_Hopscotch</STRONG> (Thumb, 406 bytes, Stack size 40 bytes, flow.o(i.Flow_Hopscotch))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Flow_Hopscotch &rArr; Frame_Skewing
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frame_Skewing
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_flow
</UL>

<P><STRONG><a name="[184]"></a>Flow_Hopscotch_Init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, flow.o(i.Flow_Hopscotch_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flow_Hopscotch_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_play_video_buffer
</UL>

<P><STRONG><a name="[8b]"></a>Flow_Ignite</STRONG> (Thumb, 292 bytes, Stack size 32 bytes, flow.o(i.Flow_Ignite))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Flow_Ignite &rArr; Frame_Skewing
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frame_Skewing
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_flow
</UL>

<P><STRONG><a name="[186]"></a>Flow_Ignite_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, flow.o(i.Flow_Ignite_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flow_Ignite_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_play_video_buffer
</UL>

<P><STRONG><a name="[8c]"></a>Flow_Lightning</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, flow.o(i.Flow_Lightning))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Flow_Lightning &rArr; Frame_Skewing
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frame_Skewing
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_flow
</UL>

<P><STRONG><a name="[185]"></a>Flow_Lightning_Init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, flow.o(i.Flow_Lightning_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flow_Lightning_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_play_video_buffer
</UL>

<P><STRONG><a name="[8d]"></a>Flow_Random</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, flow.o(i.Flow_Random))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Flow_Random &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_number
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_flow
</UL>

<P><STRONG><a name="[8f]"></a>Flow_Random_Init</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, flow.o(i.Flow_Random_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Flow_Random_Init &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_number
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_play_video_buffer
</UL>

<P><STRONG><a name="[90]"></a>Flow_Reverberate</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, flow.o(i.Flow_Reverberate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Flow_Reverberate &rArr; ModuleColor_Cal &rArr; FrameInsert_Calculate
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleColor_Cal
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frame_Skewing
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_flow
</UL>

<P><STRONG><a name="[183]"></a>Flow_Reverberate_Init</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, flow.o(i.Flow_Reverberate_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flow_Reverberate_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_play_video_buffer
</UL>

<P><STRONG><a name="[81]"></a>Flow_Static</STRONG> (Thumb, 308 bytes, Stack size 12 bytes, flow.o(i.Flow_Static))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Flow_Static
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Static_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_flow
</UL>

<P><STRONG><a name="[91]"></a>Flow_Stream</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, flow.o(i.Flow_Stream))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Flow_Stream &rArr; ModuleColor_Cal &rArr; FrameInsert_Calculate
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleColor_Cal
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Frame_Skewing
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_flow
</UL>

<P><STRONG><a name="[182]"></a>Flow_Stream_Init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, flow.o(i.Flow_Stream_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flow_Stream_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_play_video_buffer
</UL>

<P><STRONG><a name="[92]"></a>FrameInsert_Calculate</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, color.o(i.FrameInsert_Calculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrameInsert_Calculate
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModuleColor_Cal
</UL>

<P><STRONG><a name="[88]"></a>Frame_Skewing</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, color.o(i.Frame_Skewing))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Frame_Skewing
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Stream
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Reverberate
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Lightning
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Ignite
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Hopscotch
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Breath
</UL>

<P><STRONG><a name="[94]"></a>GPIO_Init</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, a5441_master.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_Init &rArr; PORT_Init &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bb]"></a>Gradual_Change</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, light.o(i.Gradual_Change))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Gradual_Change
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mic_data
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lignt_Control
</UL>

<P><STRONG><a name="[96]"></a>HEX_To_BCD</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, master.o(i.HEX_To_BCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HEX_To_BCD &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_HEX_To_BCD
</UL>

<P><STRONG><a name="[97]"></a>ID_Init</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, a5441_master.o(i.ID_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ID_Init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[197]"></a>IIC20_Stop</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sci.o(i.IIC20_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic20_callback_master_sendend
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic20_callback_master_receiveend
</UL>

<P><STRONG><a name="[99]"></a>IIC20_StopCondition</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, sci.o(i.IIC20_StopCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC20_StopCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ07_Handler
</UL>

<P><STRONG><a name="[198]"></a>IIC21_Stop</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sci.o(i.IIC21_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic21_callback_master_sendend
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic21_callback_master_receiveend
</UL>

<P><STRONG><a name="[9d]"></a>IIC21_StopCondition</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, sci.o(i.IIC21_StopCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IIC21_StopCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ08_Handler
</UL>

<P><STRONG><a name="[1b]"></a>IRQ07_Handler</STRONG> (Thumb, 348 bytes, Stack size 8 bytes, sci_user.o(i.IRQ07_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ07_Handler &rArr; iic20_callback_master_sendend
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic20_callback_master_sendend
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic20_callback_master_receiveend
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic20_callback_master_error
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC20_StopCondition
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>IRQ08_Handler</STRONG> (Thumb, 348 bytes, Stack size 8 bytes, sci_user.o(i.IRQ08_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ08_Handler &rArr; iic21_callback_master_sendend
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic21_callback_master_sendend
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic21_callback_master_receiveend
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iic21_callback_master_error
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC21_StopCondition
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>IRQ17_Handler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, tim4_user.o(i.IRQ17_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IRQ17_Handler &rArr; Timer40_Interrupt &rArr; SYS_Clock_Tick
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer40_Interrupt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>IRQ18_Handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, tim4_user.o(i.IRQ18_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>IRQ19_Handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, tim4_user.o(i.IRQ19_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>IRQ20_Handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, tim4_user.o(i.IRQ20_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>IRQ27_Handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, tim4_user.o(i.IRQ27_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>IRQ28_Handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, tim4_user.o(i.IRQ28_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>IRQ29_Handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, tim4_user.o(i.IRQ29_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>IRQ30_Handler</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, tim4_user.o(i.IRQ30_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1f7]"></a>IT_Init</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, rtc.o(i.IT_Init))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_tick_init
</UL>

<P><STRONG><a name="[a1]"></a>IT_Start</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, rtc.o(i.IT_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IT_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_tick_init
</UL>

<P><STRONG><a name="[b3]"></a>KEY_AD_Test</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, a5441_master.o(i.KEY_AD_Test))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_On
</UL>

<P><STRONG><a name="[a3]"></a>KeyS_Click</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, master.o(i.KeyS_Click))
<BR><BR>[Stack]<UL><LI>Max Depth = 1664 + Unknown Stack Size
<LI>Call Chain = KeyS_Click &rArr; SYS_Init &rArr; norflash_data_init &rArr; verify_factoryreset_effect_norflash &rArr; factoryreset_norflash &rArr; schedule_factory_reset &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_Level_Change
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_switch_led
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_reset_wifi
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_K5
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_K4
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_K3
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_K2
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_K1_LONG
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;debug_K1
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_free_effect
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_brightness
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_rhythm_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>KeyS_On</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, a5441_master.o(i.KeyS_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = KeyS_On &rArr; Key_On
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key_On
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_AD_Test
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>Key_On</STRONG> (Thumb, 330 bytes, Stack size 36 bytes, key.o(i.Key_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Key_On
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_On
</UL>

<P><STRONG><a name="[b5]"></a>LED_Display_20ms</STRONG> (Thumb, 620 bytes, Stack size 8 bytes, master.o(i.LED_Display_20ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LED_Display_20ms &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_wifi_work_state
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a7]"></a>LED_display_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, master.o(i.LED_display_init))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>Level_Calculation</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, light.o(i.Level_Calculation))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Level_Calculation
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Light_Level_Change
</UL>

<P><STRONG><a name="[aa]"></a>Light_Level_Change</STRONG> (Thumb, 72 bytes, Stack size 36 bytes, light.o(i.Light_Level_Change))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Light_Level_Change &rArr; Level_Calculation
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Level_Calculation
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
</UL>

<P><STRONG><a name="[b8]"></a>Lignt_Control</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, master.o(i.Lignt_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Lignt_Control &rArr; mcu_update_bright_val &rArr; mcu_dp_value_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gradual_Change
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_bright_val
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;auto_brightness
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>ModuleColor_Cal</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, color.o(i.ModuleColor_Cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ModuleColor_Cal &rArr; FrameInsert_Calculate
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrameInsert_Calculate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Stream
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Reverberate
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Breath
</UL>

<P><STRONG><a name="[95]"></a>PORT_Init</STRONG> (Thumb, 364 bytes, Stack size 16 bytes, gpio.o(i.PORT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = PORT_Init &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>

<P><STRONG><a name="[bc]"></a>RTC_BCD_To_HEX</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, master.o(i.RTC_BCD_To_HEX))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_BCD_To_HEX &rArr; BCD_To_HEX
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCD_To_HEX
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_server
</UL>

<P><STRONG><a name="[104]"></a>RTC_Get_CounterValue</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, rtc.o(i.RTC_Get_CounterValue))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_server
</UL>

<P><STRONG><a name="[be]"></a>RTC_HEX_To_BCD</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, master.o(i.RTC_HEX_To_BCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_HEX_To_BCD &rArr; HEX_To_BCD &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEX_To_BCD
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_local_rtc_time
</UL>

<P><STRONG><a name="[1a6]"></a>RTC_Init</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, rtc.o(i.RTC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[219]"></a>RTC_Set_CounterValue</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, rtc.o(i.RTC_Set_CounterValue))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_local_rtc_time
</UL>

<P><STRONG><a name="[bf]"></a>RTC_Start</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, rtc.o(i.RTC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c1]"></a>SPI_CLK</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, driver_spi.o(i.SPI_CLK))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteReadByte
</UL>

<P><STRONG><a name="[c0]"></a>SPI_Init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, driver_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_Init &rArr; PORT_Init &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25_CS
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CLK
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c2]"></a>SPI_MOSI</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, driver_spi.o(i.SPI_MOSI))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteReadByte
</UL>

<P><STRONG><a name="[79]"></a>SPI_WriteReadByte</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, driver_spi.o(i.SPI_WriteReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_delay
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_MOSI
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CLK
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ChipErase
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WritenEN
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
</UL>

<P><STRONG><a name="[c3]"></a>SYS_Clock_Tick</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, sys.o(i.SYS_Clock_Tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYS_Clock_Tick
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_random
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer40_Interrupt
</UL>

<P><STRONG><a name="[b1]"></a>SYS_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, a5441_master.o(i.SYS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1656 + Unknown Stack Size
<LI>Call Chain = SYS_Init &rArr; norflash_data_init &rArr; verify_factoryreset_effect_norflash &rArr; factoryreset_norflash &rArr; schedule_factory_reset &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_rundata_init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_online_data_init
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_sys_effect_init
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_data_init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_setting_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ID_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cb]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, system_cms32l051.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemCoreClockUpdate &rArr; CLK_GetHocoFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHocoFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>SystemInit</STRONG> (Thumb, 114 bytes, Stack size 4 bytes, system_cms32l051.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; CLK_GetHocoFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHocoFreq
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(.text)
</UL>
<P><STRONG><a name="[d7]"></a>TM40_Channel_Start</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tim4.o(i.TM40_Channel_Start))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_TM40_IntervalTimer
</UL>

<P><STRONG><a name="[d5]"></a>TM40_Channel_Stop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tim4.o(i.TM40_Channel_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_TM40_IntervalTimer
</UL>

<P><STRONG><a name="[a0]"></a>Timer40_Interrupt</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, master.o(i.Timer40_Interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Timer40_Interrupt &rArr; SYS_Clock_Tick
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_fifo_send_ISR
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Tick
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ17_Handler
</UL>

<P><STRONG><a name="[cd]"></a>UART0_BaudRate</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, sci.o(i.UART0_BaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART0_BaudRate &rArr; UART_BaudRateCal
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BaudRateCal
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
</UL>

<P><STRONG><a name="[cf]"></a>UART0_Init</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, sci.o(i.UART0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UART0_Init &rArr; UART0_BaudRate &rArr; UART_BaudRateCal
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_BaudRate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_app_init
</UL>

<P><STRONG><a name="[17f]"></a>UART0_Send</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sci.o(i.UART0_Send))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[d0]"></a>UART1_BaudRate</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, sci.o(i.UART1_BaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART1_BaudRate &rArr; UART_BaudRateCal
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_BaudRateCal
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
</UL>

<P><STRONG><a name="[d1]"></a>UART1_Init</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, sci.o(i.UART1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = UART1_Init &rArr; UART1_BaudRate &rArr; UART_BaudRateCal
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Start
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_BaudRate
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_app_init
</UL>

<P><STRONG><a name="[203]"></a>UART1_Receive</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sci.o(i.UART1_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_app_init
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_callback_receiveend
</UL>

<P><STRONG><a name="[20c]"></a>UART1_Send</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, sci.o(i.UART1_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit_output
</UL>

<P><STRONG><a name="[d2]"></a>UART1_Start</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, sci.o(i.UART1_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
</UL>

<P><STRONG><a name="[ce]"></a>UART_BaudRateCal</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, sci.o(i.UART_BaudRateCal))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = UART_BaudRateCal
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_BaudRate
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_BaudRate
</UL>

<P><STRONG><a name="[d4]"></a>User_TM40_IntervalTimer</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, a5441_master.o(i.User_TM40_IntervalTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = User_TM40_IntervalTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM40_Channel_Stop
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TM40_Channel_Start
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_tick_init
</UL>

<P><STRONG><a name="[77]"></a>W25_CS</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, driver_spi.o(i.W25_CS))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ChipErase
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WritenEN
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
</UL>

<P><STRONG><a name="[7b]"></a>WDT_Restart</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wdt.o(i.WDT_Restart))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramPage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseSector
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_interrupt
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_Insert
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_BufferRead
</UL>

<P><STRONG><a name="[73]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, a5441_master.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Display_20ms
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_module_time_serve_result
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wifi_status
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_play_video_buffer
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_flow
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetHocoFreq
</UL>

<P><STRONG><a name="[5d]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[4f]"></a>_sys_exit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, retarget.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[d8]"></a>adc_dma_next_ISR</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, master.o(i.adc_dma_next_ISR), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Stop
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Start
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Stop
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_interrupt
</UL>

<P><STRONG><a name="[db]"></a>adc_dma_start</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, master.o(i.adc_dma_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = adc_dma_start &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Stop
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Start
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>IRQ21_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, adc_user.o(i.adc_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ21_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[dc]"></a>adc_interrupt</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, adc_user.o(i.adc_interrupt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_next_ISR
</UL>

<P><STRONG><a name="[dd]"></a>add_clock_schedule</STRONG> (Thumb, 166 bytes, Stack size 768 bytes, user_memory.o(i.add_clock_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = add_clock_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_all_schedule
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_all_schedule
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_clock_detial
</UL>

<P><STRONG><a name="[e0]"></a>add_favorites_ef</STRONG> (Thumb, 58 bytes, Stack size 264 bytes, user_memory.o(i.add_favorites_ef))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = add_favorites_ef &rArr; save_effect &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_favoritesef_ranklist
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_effect
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_favoritesef_ranklist
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_effect_detail
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_num_from_effect_ranklist
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_get_favorites_ef_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[e4]"></a>add_num_from_effect_ranklist</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, user_memory.o(i.add_num_from_effect_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = add_num_from_effect_ranklist &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_original_ef
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_favorites_ef
</UL>

<P><STRONG><a name="[e8]"></a>add_num_from_playlist_ranklist</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, user_memory.o(i.add_num_from_playlist_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = add_num_from_playlist_ranklist &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_playlist
</UL>

<P><STRONG><a name="[e9]"></a>add_original_ef</STRONG> (Thumb, 80 bytes, Stack size 80 bytes, user_memory.o(i.add_original_ef))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = add_original_ef &rArr; save_effect &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_originalef_ranklist
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_effect
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_allef_ranklist
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_originalef_ranklist
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_allef_ranklist
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_num_from_effect_ranklist
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_get_ef_detial
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_effect_detail_handle
</UL>

<P><STRONG><a name="[ef]"></a>add_playlist</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, user_memory.o(i.add_playlist))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = add_playlist &rArr; save_playdetail &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_playdetail
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playlist_ranklist
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_num_from_playlist_ranklist
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_playlist_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_detial
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_default_playlist
</UL>

<P><STRONG><a name="[f3]"></a>adjust_play_list</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, play.o(i.adjust_play_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = adjust_play_list &rArr; move_data_to_first_in_list &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_data_to_first_in_list
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_playmode
</UL>

<P><STRONG><a name="[f5]"></a>all_data_update</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, protocol.o(i.all_data_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = all_data_update &rArr; mcu_update_switch_led &rArr; mcu_dp_bool_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_switch_led
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_switch_indicator
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_brightness_auto
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_bright_val
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_auto_brightness_switch
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_auto_brightness_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[b9]"></a>auto_brightness</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, master.o(i.auto_brightness))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lignt_Control
</UL>

<P><STRONG><a name="[fa]"></a>autoswitch_effects_in_list</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, master.o(i.autoswitch_effects_in_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = autoswitch_effects_in_list &rArr; switch_next_ef_in_list &rArr; start_play_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_ef_in_list
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fc]"></a>bubble_sort_location</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, play.o(i.bubble_sort_location))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;figure_slave_run_number_in_direction
</UL>

<P><STRONG><a name="[1d4]"></a>byte_to_int</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, mcu_api.o(i.byte_to_int))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_value
</UL>

<P><STRONG><a name="[ad]"></a>change_rhythm_mode</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, master.o(i.change_rhythm_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = change_rhythm_mode &rArr; switch_next_free_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_free_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
</UL>

<P><STRONG><a name="[109]"></a>checksum_calculate</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, a5441_master.o(i.checksum_calculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = checksum_calculate
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_firmware_download
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_firmware_chechsum_norflash
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playstatus
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_ranklist
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_efsketch
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playdetail
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_originalef_ranklist
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_one_efsketch
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_favoritesef_ranklist
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_efsketch
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_efdetail
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_current_playdetail
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_current_play_efdetail
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_list
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_detial
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_allef_ranklist
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dataverify
</UL>

<P><STRONG><a name="[fd]"></a>clear_all_ef_ranklist</STRONG> (Thumb, 34 bytes, Stack size 72 bytes, user_memory.o(i.clear_all_ef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = clear_all_ef_ranklist &rArr; save_originalef_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_originalef_ranklist
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_favoritesef_ranklist
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_allef_ranklist
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
</UL>

<P><STRONG><a name="[fe]"></a>clear_device_identify</STRONG> (Thumb, 30 bytes, Stack size 264 bytes, user_memory.o(i.clear_device_identify))
<BR><BR>[Stack]<UL><LI>Max Depth = 616<LI>Call Chain = clear_device_identify &rArr; save_device_identify &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_device_identify
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
</UL>

<P><STRONG><a name="[100]"></a>clear_firmware_download_flag</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, master.o(i.clear_firmware_download_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 648<LI>Call Chain = clear_firmware_download_flag &rArr; FlashROM_Insert &rArr; FlashROM_BufferRead &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_Insert
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_first_ota_status
</UL>

<P><STRONG><a name="[101]"></a>clear_firmware_update_flag</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, newota.o(i.clear_firmware_update_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = clear_firmware_update_flag &rArr; FlashROM_Insert &rArr; FlashROM_BufferRead &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_Insert
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_firmware_download
</UL>

<P><STRONG><a name="[102]"></a>clear_playlist_ranklist</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, user_memory.o(i.clear_playlist_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = clear_playlist_ranklist &rArr; save_playlist_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_playlist_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_default_playlist
</UL>

<P><STRONG><a name="[103]"></a>clock_server</STRONG> (Thumb, 194 bytes, Stack size 768 bytes, master.o(i.clock_server))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168<LI>Call Chain = clock_server &rArr; start_clock_task &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_system_time
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Get_CounterValue
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_all_schedule
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_clock_task
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_clock_task
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_BCD_To_HEX
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[107]"></a>close_clock_task</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, master.o(i.close_clock_task))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_server
</UL>

<P><STRONG><a name="[108]"></a>com_dataverify</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, appfunction.o(i.com_dataverify))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = com_dataverify &rArr; checksum_calculate
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printhex_my
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_detial
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_control_detial
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_effect_detail_handle
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_clock_list
</UL>

<P><STRONG><a name="[1f1]"></a>compare_same_ranklist</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, user_memory.o(i.compare_same_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = compare_same_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_norflash_ranklist
</UL>

<P><STRONG><a name="[10b]"></a>convert_bright_in_range</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, mic.o(i.convert_bright_in_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = convert_bright_in_range &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mic_data
</UL>

<P><STRONG><a name="[1d7]"></a>convert_device_shape_data</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, appfunction.o(i.convert_device_shape_data))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_device_detail
</UL>

<P><STRONG><a name="[10c]"></a>copy_built_in_ef_to_norflash</STRONG> (Thumb, 94 bytes, Stack size 136 bytes, user_memory.o(i.copy_built_in_ef_to_norflash))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = copy_built_in_ef_to_norflash &rArr; reset_built_in_effect &rArr; save_effect &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_allef_ranklist
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_built_in_effect
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_originalef_ranklist
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ef_ranklist
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
</UL>

<P><STRONG><a name="[10f]"></a>copy_schedule_detail_from_com</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, user_memory.o(i.copy_schedule_detail_from_com))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = copy_schedule_detail_from_com &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_clock_detial
</UL>

<P><STRONG><a name="[110]"></a>copy_schedule_detail_to_com</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, user_memory.o(i.copy_schedule_detail_to_com))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = copy_schedule_detail_to_com &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_detial
</UL>

<P><STRONG><a name="[111]"></a>data_handle</STRONG> (Thumb, 644 bytes, Stack size 48 bytes, system.o(i.data_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 2008 + Unknown Stack Size
<LI>Call Chain = data_handle &rArr; data_point_handle &rArr; dp_download_handle &rArr; dp_download_issue_cmd_handle &rArr; mcu_download_issue_cmd_handle &rArr; delete_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_info_update
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heat_beat_check
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mcu_wifi_mode
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_point_handle
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_test_result
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_package_choose
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_module_time_serve_result
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_write_rtctime
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_greentime
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_firm_update_handle
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_wifi_status
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_service
</UL>

<P><STRONG><a name="[a9]"></a>debug_K4</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, debug.o(i.debug_K4))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
</UL>

<P><STRONG><a name="[ac]"></a>debug_K5</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, debug.o(i.debug_K5))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
</UL>

<P><STRONG><a name="[1ab]"></a>delayMS</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.delayMS))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_light_in_turn
</UL>

<P><STRONG><a name="[120]"></a>delete_favorites_ef</STRONG> (Thumb, 58 bytes, Stack size 264 bytes, user_memory.o(i.delete_favorites_ef))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = delete_favorites_ef &rArr; save_effect &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_favoritesef_ranklist
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_effect
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_favoritesef_ranklist
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_effect_detail
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_num_from_effect_ranklist
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_get_favorites_ef_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[121]"></a>delete_num_from_effect_ranklist</STRONG> (Thumb, 112 bytes, Stack size 88 bytes, user_memory.o(i.delete_num_from_effect_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = delete_num_from_effect_ranklist &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_original_ef
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_favorites_ef
</UL>

<P><STRONG><a name="[122]"></a>delete_num_from_playlist_ranklist</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, user_memory.o(i.delete_num_from_playlist_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = delete_num_from_playlist_ranklist &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_playlist
</UL>

<P><STRONG><a name="[123]"></a>delete_original_ef</STRONG> (Thumb, 156 bytes, Stack size 264 bytes, user_memory.o(i.delete_original_ef))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = delete_original_ef &rArr; save_effect &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_originalef_ranklist
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_favoritesef_ranklist
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_effect
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_allef_ranklist
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_originalef_ranklist
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_original_effect
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_favoritesef_ranklist
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_allef_ranklist
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_num_from_effect_ranklist
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ef_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[125]"></a>delete_playlist</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, user_memory.o(i.delete_playlist))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = delete_playlist &rArr; save_playlist_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playlist_ranklist
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_num_from_playlist_ranklist
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_play_list
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_playlist_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[127]"></a>delete_schedule</STRONG> (Thumb, 126 bytes, Stack size 1520 bytes, user_memory.o(i.delete_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 1872<LI>Call Chain = delete_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_all_schedule
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_all_schedule
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[128]"></a>download_firmware_to_norflash</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, newota.o(i.download_firmware_to_norflash))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = download_firmware_to_norflash &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_firmware_download
</UL>

<P><STRONG><a name="[11f]"></a>dp_download_handle</STRONG> (Thumb, 668 bytes, Stack size 24 bytes, protocol.o(i.dp_download_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1928 + Unknown Stack Size
<LI>Call Chain = dp_download_handle &rArr; dp_download_issue_cmd_handle &rArr; mcu_download_issue_cmd_handle &rArr; delete_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_work_mode_handle
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_user_protocol_handle
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_temp_value_handle
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_system_state_handle
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_mic_handle
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_led_handle
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_indicator_handle
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_running_state_handle
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved9_handle
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved8_handle
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved7_handle
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved6_handle
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved5_handle
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved4_handle
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved3_handle
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved10_handle
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_playlist_ranklist_handle
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_playlist_num_handle
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_playlist_effect_sketch_handle
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_play_list_handle
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_play_detial_handle
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_play_control_handle
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_play_control_detial_handle
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_original_effect_ranklist_handle
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_link_status_handle
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_issue_cmd_handle
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_global_status_handle
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_favorites_effect_ranklist_handle
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_sketch_handle
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_preview_handle
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_num_handle
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_list_handle
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_detial_handle
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_device_detail_handle
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_device_control_handle
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_colour_data_handle
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_clock_list_handle
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_clock_detial_handle
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_brightness_auto_handle
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_bright_val_handle
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_auto_brightness_switch_handle
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_auto_brightness_mode_handle
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_all_effect_ranklist_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_point_handle
</UL>

<P><STRONG><a name="[16d]"></a>effect_flow</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, flow.o(i.effect_flow))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = effect_flow &rArr; Flow_Stream &rArr; ModuleColor_Cal &rArr; FrameInsert_Calculate
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Stream
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Static
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Reverberate
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Random
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Lightning
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Ignite
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Hopscotch
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Breath
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_play_color_calu
</UL>

<P><STRONG><a name="[16e]"></a>effect_play_color_calu</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, flow.o(i.effect_play_color_calu))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = effect_play_color_calu &rArr; effect_flow &rArr; Flow_Stream &rArr; ModuleColor_Cal &rArr; FrameInsert_Calculate
</UL>
<BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_flow
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_effect_video
</UL>

<P><STRONG><a name="[170]"></a>effect_play_pause</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, play.o(i.effect_play_pause))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_device_pairing_mode
</UL>

<P><STRONG><a name="[126]"></a>end_play_list</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, play.o(i.end_play_list))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_playlist
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reload_current_play_list
</UL>

<P><STRONG><a name="[16f]"></a>enter_device_pairing_mode</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, play.o(i.enter_device_pairing_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = enter_device_pairing_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_play_pause
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_device_control
</UL>

<P><STRONG><a name="[171]"></a>enter_playing_effect_mode</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, play.o(i.enter_playing_effect_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = enter_playing_effect_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;resume_play_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[173]"></a>enter_preview_effect_mode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, play.o(i.enter_preview_effect_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = enter_preview_effect_mode &rArr; play_preview_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_preview_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_effect_preview
</UL>

<P><STRONG><a name="[175]"></a>erase_firmware_block</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, newota.o(i.erase_firmware_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = erase_firmware_block &rArr; FLASH_BlockErase &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_first_ota_status
</UL>

<P><STRONG><a name="[176]"></a>erase_firmware_block64K_norflash</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, newota.o(i.erase_firmware_block64K_norflash))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = erase_firmware_block64K_norflash &rArr; FLASH_BlockErase &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_firmware_download
</UL>

<P><STRONG><a name="[b0]"></a>factoryreset_norflash</STRONG> (Thumb, 60 bytes, Stack size 264 bytes, user_memory.o(i.factoryreset_norflash))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376 + Unknown Stack Size
<LI>Call Chain = factoryreset_norflash &rArr; schedule_factory_reset &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_effect_verify
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_reset_to_zreo
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_default_playlist
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_default_global_setting
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_built_in_ef_to_norflash
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_device_identify
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_all_ef_ranklist
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_factory_reset
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_module_time_serve_result
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_factoryreset_effect_norflash
</UL>

<P><STRONG><a name="[69]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, retarget.o(i.ferror))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[17c]"></a>figure_slave_run_number_in_direction</STRONG> (Thumb, 494 bytes, Stack size 280 bytes, play.o(i.figure_slave_run_number_in_direction))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bubble_sort_location
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_mini_device_data
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;preprocess_play_effect
</UL>

<P><STRONG><a name="[39]"></a>fputc</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[180]"></a>generate_play_video_buffer</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, play.o(i.generate_play_video_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = generate_play_video_buffer &rArr; Flow_Random_Init &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Stream_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Static_Init
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Reverberate_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Random_Init
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Lightning_Init
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Ignite_Init
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Hopscotch_Init
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Breath_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;preprocess_play_effect
</UL>

<P><STRONG><a name="[187]"></a>generate_virtual_device</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, slave.o(i.generate_virtual_device))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = generate_virtual_device &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_online_data_init
</UL>

<P><STRONG><a name="[de]"></a>get_all_schedule</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.get_all_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_all_schedule &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_server
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_clock_list
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_schedule
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_clock_schedule
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_list
</UL>

<P><STRONG><a name="[ea]"></a>get_allef_ranklist</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.get_allef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_allef_ranklist &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_original_ef
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_original_ef
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_allef_ranklist
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_allef_ranklist
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_norflash_ranklist
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_free_effect
</UL>

<P><STRONG><a name="[188]"></a>get_average</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, mic.o(i.get_average))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_average
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mic_data
</UL>

<P><STRONG><a name="[217]"></a>get_check_sum</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, system.o(i.get_check_sum))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_check_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_service
</UL>

<P><STRONG><a name="[1fc]"></a>get_data_checksum</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, parse.o(i.get_data_checksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_data_checksum
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_protocol_frame
</UL>

<P><STRONG><a name="[189]"></a>get_device_identify</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, user_memory.o(i.get_device_identify))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_device_identify &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_device_indentify
</UL>

<P><STRONG><a name="[18a]"></a>get_download_cmd_total</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, protocol.o(i.get_download_cmd_total))
<BR><BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dowmload_dpid_index
</UL>

<P><STRONG><a name="[e1]"></a>get_effect_detail</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, user_memory.o(i.get_effect_detail))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_effect_detail &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_favorites_ef
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_favorites_ef
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_efsketch
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_one_efsketch
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_efsketch
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_efdetail
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_local_effect_data
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_free_effect
</UL>

<P><STRONG><a name="[18b]"></a>get_effect_verify</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, user_memory.o(i.get_effect_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_effect_verify &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_factoryreset_effect_norflash
</UL>

<P><STRONG><a name="[e3]"></a>get_favoritesef_ranklist</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.get_favoritesef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_favoritesef_ranklist &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_original_ef
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_favorites_ef
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_favorites_ef
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_favoritesef_ranklist
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_favoritesef_ranklist
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_norflash_ranklist
</UL>

<P><STRONG><a name="[18c]"></a>get_firmware_chechsum_norflash</STRONG> (Thumb, 54 bytes, Stack size 272 bytes, newota.o(i.get_firmware_chechsum_norflash))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = get_firmware_chechsum_norflash &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_firmware_download
</UL>

<P><STRONG><a name="[18d]"></a>get_first_ota_status</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, master.o(i.get_first_ota_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = get_first_ota_status &rArr; clear_firmware_download_flag &rArr; FlashROM_Insert &rArr; FlashROM_BufferRead &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strcmp
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_firmware_block
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_norflash_firmware_version
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_firmware_download_flag
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_rundata_init
</UL>

<P><STRONG><a name="[191]"></a>get_global_setting</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.get_global_setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_global_setting &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;global_setting_init
</UL>

<P><STRONG><a name="[18f]"></a>get_norflash_firmware_version</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, master.o(i.get_norflash_firmware_version))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_norflash_firmware_version &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_first_ota_status
</UL>

<P><STRONG><a name="[124]"></a>get_original_effect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, user_memory.o(i.get_original_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = get_original_effect &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_original_ef
</UL>

<P><STRONG><a name="[ec]"></a>get_originalef_ranklist</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.get_originalef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_originalef_ranklist &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_original_ef
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_built_in_ef_to_norflash
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_original_ef
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_originalef_ranklist
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_originalef_ranklist
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_norflash_ranklist
</UL>

<P><STRONG><a name="[192]"></a>get_playdetail</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, user_memory.o(i.get_playdetail))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_playdetail &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_playmode
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reload_current_play_list
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playdetail
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_current_playdetail
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_play_list
</UL>

<P><STRONG><a name="[193]"></a>get_playlist_name</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, user_memory.o(i.get_playlist_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_playlist_name &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_ranklist
</UL>

<P><STRONG><a name="[f1]"></a>get_playlist_ranklist</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.get_playlist_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_playlist_ranklist &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_playlist
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_playlist
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_playlist
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reload_current_play_list
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_ranklist
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_playlist_ranklist
</UL>

<P><STRONG><a name="[8e]"></a>get_random_number</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, master.o(i.get_random_number))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = get_random_number
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_random
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Random_Init
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;permute_list_in_random
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flow_Random
</UL>

<P><STRONG><a name="[1e9]"></a>get_random_seed</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, master.o(i.get_random_seed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_random_seed
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_init
</UL>

<P><STRONG><a name="[194]"></a>get_schedule_detail</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, user_memory.o(i.get_schedule_detail))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = get_schedule_detail &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_detial
</UL>

<P><STRONG><a name="[195]"></a>get_sound_intensity</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, mic.o(i.get_sound_intensity))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_sound_intensity
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mic_data
</UL>

<P><STRONG><a name="[11c]"></a>get_wifi_status</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, protocol.o(i.get_wifi_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_wifi_status &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[c8]"></a>global_setting_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, a5441_master.o(i.global_setting_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = global_setting_init &rArr; get_global_setting &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_global_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[34]"></a>hard_fault_handler_c</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, main.o(i.hard_fault_handler_c))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = hard_fault_handler_c &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.emb_text)
</UL>
<P><STRONG><a name="[17a]"></a>init_default_global_setting</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user_memory.o(i.init_default_global_setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = init_default_global_setting &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_global_setting
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
</UL>

<P><STRONG><a name="[179]"></a>init_default_playlist</STRONG> (Thumb, 80 bytes, Stack size 88 bytes, user_memory.o(i.init_default_playlist))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = init_default_playlist &rArr; add_playlist &rArr; save_playdetail &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_playlist_ranklist
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_playlist
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_playdetial
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
</UL>

<P><STRONG><a name="[1f6]"></a>invert_list</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, play.o(i.invert_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = invert_list
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_free_effect
</UL>

<P><STRONG><a name="[19c]"></a>it_callback_Handle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, a5441_master.o(i.it_callback_Handle), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;it_callback
</UL>

<P><STRONG><a name="[2b]"></a>IRQ23_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rtc_user.o(i.it_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ23_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[19d]"></a>it_interrupt</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rtc_user.o(i.it_interrupt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;it_callback
</UL>

<P><STRONG><a name="[19e]"></a>light_device_pairing_play</STRONG> (Thumb, 254 bytes, Stack size 176 bytes, play.o(i.light_device_pairing_play))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = light_device_pairing_play &rArr; transmit_protocol_frame &rArr; transmit_buffer_data &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_protocol_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_device_control
</UL>

<P><STRONG><a name="[1a0]"></a>load_local_effect_data</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, play.o(i.load_local_effect_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = load_local_effect_data &rArr; get_effect_detail &rArr; FLASH_BufferRead &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_effect_detail
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_current_effect
</UL>

<P><STRONG><a name="[1a1]"></a>load_preview_effect_data</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, play.o(i.load_preview_effect_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = load_preview_effect_data &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_preview_effect
</UL>

<P><STRONG><a name="[4a]"></a>main</STRONG> (Thumb, 456 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 2032 + Unknown Stack Size
<LI>Call Chain = main &rArr; wifi_service &rArr; wifi_uart_service &rArr; data_handle &rArr; data_point_handle &rArr; dp_download_handle &rArr; dp_download_issue_cmd_handle &rArr; mcu_download_issue_cmd_handle &rArr; delete_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_service
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_module_init
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_fifo_send_ISR
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_app_init
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_tick_init
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_init
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mic_data
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_effect_video
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_server
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoswitch_effects_in_list
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_dma_start
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Restart
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Start
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lignt_Control
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_display_init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Display_20ms
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_On
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Set_HardTrigger
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Set_Clock
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMS
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[12d]"></a>mcu_download_auto_brightness_mode</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, appfunction.o(i.mcu_download_auto_brightness_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = mcu_download_auto_brightness_mode &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_global_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_auto_brightness_mode_handle
</UL>

<P><STRONG><a name="[131]"></a>mcu_download_auto_brightness_switch</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, appfunction.o(i.mcu_download_auto_brightness_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = mcu_download_auto_brightness_switch &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_global_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_auto_brightness_switch_handle
</UL>

<P><STRONG><a name="[135]"></a>mcu_download_bright_val</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, appfunction.o(i.mcu_download_bright_val))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = mcu_download_bright_val &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_global_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_bright_val_handle
</UL>

<P><STRONG><a name="[138]"></a>mcu_download_brightness_auto</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, appfunction.o(i.mcu_download_brightness_auto))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = mcu_download_brightness_auto &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_global_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_brightness_auto_handle
</UL>

<P><STRONG><a name="[13a]"></a>mcu_download_clock_detial</STRONG> (Thumb, 42 bytes, Stack size 40 bytes, appfunction.o(i.mcu_download_clock_detial))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160<LI>Call Chain = mcu_download_clock_detial &rArr; add_clock_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_schedule_detail_from_com
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_clock_schedule
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_clock_detial
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_all_clock_detail
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_list
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_clock_detial_handle
</UL>

<P><STRONG><a name="[13c]"></a>mcu_download_clock_list</STRONG> (Thumb, 92 bytes, Stack size 768 bytes, appfunction.o(i.mcu_download_clock_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120<LI>Call Chain = mcu_download_clock_list &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_all_schedule
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_all_schedule
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dataverify
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_clock_list_handle
</UL>

<P><STRONG><a name="[140]"></a>mcu_download_device_control</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, appfunction.o(i.mcu_download_device_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = mcu_download_device_control &rArr; light_device_pairing_play &rArr; transmit_protocol_frame &rArr; transmit_buffer_data &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_device_pairing_play
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_device_pairing_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_device_control_handle
</UL>

<P><STRONG><a name="[142]"></a>mcu_download_device_detail</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, appfunction.o(i.mcu_download_device_detail))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = mcu_download_device_detail &rArr; save_all_slave_data &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_all_slave_data
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_slave_data
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_slave_data
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_device_detail_handle
</UL>

<P><STRONG><a name="[1b5]"></a>mcu_download_device_indentify</STRONG> (Thumb, 34 bytes, Stack size 272 bytes, appfunction.o(i.mcu_download_device_indentify))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = mcu_download_device_indentify &rArr; save_device_identify &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_device_identify
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_reserved3
</UL>

<P><STRONG><a name="[144]"></a>mcu_download_effect_detail_handle</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, appfunction.o(i.mcu_download_effect_detail_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = mcu_download_effect_detail_handle &rArr; update_built_in_effect &rArr; save_effect &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_original_ef
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_com_effect_detial_log
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_originalef_ranklist
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_favoritesef_ranklist
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_allef_ranklist
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dataverify
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_built_in_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_detial_handle
</UL>

<P><STRONG><a name="[148]"></a>mcu_download_effect_preview</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, appfunction.o(i.mcu_download_effect_preview))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = mcu_download_effect_preview &rArr; enter_preview_effect_mode &rArr; play_preview_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_com_effect_detial_log
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_preview_effect_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_preview_handle
</UL>

<P><STRONG><a name="[166]"></a>mcu_download_issue_cmd_handle</STRONG> (Thumb, 322 bytes, Stack size 16 bytes, appfunction.o(i.mcu_download_issue_cmd_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1888 + Unknown Stack Size
<LI>Call Chain = mcu_download_issue_cmd_handle &rArr; delete_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_built_in_effect
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_schedule
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_playlist
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_original_ef
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_favorites_ef
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_favorites_ef
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turn_off_all_salve_light
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_playlist
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reload_current_play_list
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_slave_data
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_free_effect
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_playing_effect_mode
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_device_pairing_mode
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playstatus
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_ranklist
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_efsketch
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playdetail
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_originalef_ranklist
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_one_efsketch
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_favoritesef_ranklist
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_efsketch
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_efdetail
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_device_indentify
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_device_detail
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_current_playdetail
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_list
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_detial
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_allef_ranklist
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dataverify
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[167]"></a>mcu_download_play_control_detial</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, appfunction.o(i.mcu_download_play_control_detial))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = mcu_download_play_control_detial &rArr; switch_playlist &rArr; start_play_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_playmode
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_playlist
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_lastnext_effect
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_cyclemode
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_playstatus
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dataverify
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_play_control_handle
</UL>

<P><STRONG><a name="[168]"></a>mcu_download_play_detial</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, appfunction.o(i.mcu_download_play_detial))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = mcu_download_play_detial &rArr; reload_current_play_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_playlist
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reload_current_play_list
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_com_playdetial
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_ranklist
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dataverify
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_play_detial_handle
</UL>

<P><STRONG><a name="[169]"></a>mcu_download_reserved3</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, appfunction.o(i.mcu_download_reserved3))
<BR><BR>[Stack]<UL><LI>Max Depth = 640<LI>Call Chain = mcu_download_reserved3 &rArr; mcu_download_device_indentify &rArr; save_device_identify &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_device_indentify
</UL>
<BR>[Called By]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved3_handle
</UL>

<P><STRONG><a name="[16a]"></a>mcu_download_switch_indicator</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, appfunction.o(i.mcu_download_switch_indicator))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = mcu_download_switch_indicator &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_global_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_indicator_handle
</UL>

<P><STRONG><a name="[16b]"></a>mcu_download_switch_led</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, appfunction.o(i.mcu_download_switch_led))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_led_handle
</UL>

<P><STRONG><a name="[16c]"></a>mcu_download_switch_mic</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, appfunction.o(i.mcu_download_switch_mic))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = mcu_download_switch_mic &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_global_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_mic_handle
</UL>

<P><STRONG><a name="[132]"></a>mcu_dp_bool_update</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, mcu_api.o(i.mcu_dp_bool_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mcu_dp_bool_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_switch_led
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_switch_indicator
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_auto_brightness_switch
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_mic_handle
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_led_handle
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_indicator_handle
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_auto_brightness_switch_handle
</UL>

<P><STRONG><a name="[12e]"></a>mcu_dp_enum_update</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, mcu_api.o(i.mcu_dp_enum_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mcu_dp_enum_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_auto_brightness_mode
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_work_mode_handle
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_auto_brightness_mode_handle
</UL>

<P><STRONG><a name="[12a]"></a>mcu_dp_raw_update</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, mcu_api.o(i.mcu_dp_raw_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_byte
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_user_protocol_handle
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved9_handle
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved8_handle
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved7_handle
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved6_handle
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved5_handle
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved4_handle
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved3_handle
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_reserved10_handle
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_playlist_ranklist_handle
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_playlist_effect_sketch_handle
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_play_list_handle
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_play_detial_handle
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_play_control_handle
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_play_control_detial_handle
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_original_effect_ranklist_handle
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_link_status_handle
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_issue_cmd_handle
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_global_status_handle
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_favorites_effect_ranklist_handle
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_sketch_handle
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_preview_handle
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_list_handle
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_detial_handle
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_device_detail_handle
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_device_control_handle
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_clock_list_handle
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_clock_detial_handle
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_all_effect_ranklist_handle
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playstatus
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_ranklist
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_efsketch
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playdetail
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_originalef_ranklist
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_one_efsketch
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_favoritesef_ranklist
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_efsketch
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_efdetail
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_device_indentify
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_device_detail
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_current_playdetail
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_current_play_efdetail
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_list
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_clock_detial
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_allef_ranklist
</UL>

<P><STRONG><a name="[13e]"></a>mcu_dp_string_update</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, mcu_api.o(i.mcu_dp_string_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mcu_dp_string_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_byte
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_colour_data_handle
</UL>

<P><STRONG><a name="[136]"></a>mcu_dp_value_update</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, mcu_api.o(i.mcu_dp_value_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = mcu_dp_value_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_brightness_auto
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_bright_val
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_temp_value_handle
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_system_state_handle
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_running_state_handle
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_playlist_num_handle
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_num_handle
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_brightness_auto_handle
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_bright_val_handle
</UL>

<P><STRONG><a name="[118]"></a>mcu_firm_update_handle</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, protocol.o(i.mcu_firm_update_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = mcu_firm_update_handle &rArr; mcu_firmware_download &rArr; set_firmware_downloading_flag &rArr; FlashROM_Insert &rArr; FlashROM_BufferRead &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_firmware_download
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[1d0]"></a>mcu_firmware_download</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, appfunction.o(i.mcu_firmware_download))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = mcu_firmware_download &rArr; set_firmware_downloading_flag &rArr; FlashROM_Insert &rArr; FlashROM_BufferRead &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firmware_update_flag
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firmware_downloading_flag
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_firmware_download_finish_flag
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_firmware_chechsum_norflash
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_firmware_block64K_norflash
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;download_firmware_to_norflash
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_firmware_update_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_firm_update_handle
</UL>

<P><STRONG><a name="[130]"></a>mcu_get_dp_download_bool</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mcu_api.o(i.mcu_get_dp_download_bool))
<BR><BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_mic_handle
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_led_handle
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_switch_indicator_handle
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_auto_brightness_switch_handle
</UL>

<P><STRONG><a name="[12c]"></a>mcu_get_dp_download_enum</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mcu_api.o(i.mcu_get_dp_download_enum))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_work_mode_handle
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_auto_brightness_mode_handle
</UL>

<P><STRONG><a name="[134]"></a>mcu_get_dp_download_value</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mcu_api.o(i.mcu_get_dp_download_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mcu_get_dp_download_value
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;byte_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_temp_value_handle
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_system_state_handle
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_running_state_handle
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_playlist_num_handle
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_effect_num_handle
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_brightness_auto_handle
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_bright_val_handle
</UL>

<P><STRONG><a name="[119]"></a>mcu_get_greentime</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, protocol.o(i.mcu_get_greentime))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[105]"></a>mcu_get_system_time</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mcu_api.o(i.mcu_get_system_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mcu_get_system_time &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_server
</UL>

<P><STRONG><a name="[b6]"></a>mcu_get_wifi_work_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mcu_api.o(i.mcu_get_wifi_work_state))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Display_20ms
</UL>

<P><STRONG><a name="[af]"></a>mcu_reset_wifi</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mcu_api.o(i.mcu_reset_wifi))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mcu_reset_wifi &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
</UL>

<P><STRONG><a name="[1e0]"></a>mcu_restart</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, master.o(i.mcu_restart))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_module_time_serve_result
</UL>

<P><STRONG><a name="[1b8]"></a>mcu_update_allef_ranklist</STRONG> (Thumb, 42 bytes, Stack size 112 bytes, appfunction.o(i.mcu_update_allef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mcu_update_allef_ranklist &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_allef_ranklist
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ef_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_effect_detail_handle
</UL>

<P><STRONG><a name="[f8]"></a>mcu_update_auto_brightness_mode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, appfunction.o(i.mcu_update_auto_brightness_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mcu_update_auto_brightness_mode &rArr; mcu_dp_enum_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update
</UL>

<P><STRONG><a name="[f7]"></a>mcu_update_auto_brightness_switch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, appfunction.o(i.mcu_update_auto_brightness_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mcu_update_auto_brightness_switch &rArr; mcu_dp_bool_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update
</UL>

<P><STRONG><a name="[ba]"></a>mcu_update_bright_val</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, appfunction.o(i.mcu_update_bright_val))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mcu_update_bright_val &rArr; mcu_dp_value_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lignt_Control
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_brightness
</UL>

<P><STRONG><a name="[f9]"></a>mcu_update_brightness_auto</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, appfunction.o(i.mcu_update_brightness_auto))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mcu_update_brightness_auto &rArr; mcu_dp_value_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update
</UL>

<P><STRONG><a name="[1c4]"></a>mcu_update_clock_detial</STRONG> (Thumb, 60 bytes, Stack size 64 bytes, appfunction.o(i.mcu_update_clock_detial))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = mcu_update_clock_detial &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_schedule_detail
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_schedule_detail_to_com
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1b0]"></a>mcu_update_clock_list</STRONG> (Thumb, 210 bytes, Stack size 944 bytes, appfunction.o(i.mcu_update_clock_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032<LI>Call Chain = mcu_update_clock_list &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_all_schedule
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_clock_detial
</UL>

<P><STRONG><a name="[1d5]"></a>mcu_update_current_play_efdetail</STRONG> (Thumb, 62 bytes, Stack size 192 bytes, appfunction.o(i.mcu_update_current_play_efdetail))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = mcu_update_current_play_efdetail &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_effect_detial
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_new_effect
</UL>

<P><STRONG><a name="[1c1]"></a>mcu_update_current_playdetail</STRONG> (Thumb, 50 bytes, Stack size 88 bytes, appfunction.o(i.mcu_update_current_playdetail))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = mcu_update_current_playdetail &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playdetail
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1c8]"></a>mcu_update_device_detail</STRONG> (Thumb, 136 bytes, Stack size 264 bytes, appfunction.o(i.mcu_update_device_detail))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = mcu_update_device_detail &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_device_shape_data
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1c9]"></a>mcu_update_device_indentify</STRONG> (Thumb, 26 bytes, Stack size 264 bytes, appfunction.o(i.mcu_update_device_indentify))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = mcu_update_device_indentify &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_device_identify
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1bc]"></a>mcu_update_efdetail</STRONG> (Thumb, 56 bytes, Stack size 200 bytes, appfunction.o(i.mcu_update_efdetail))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = mcu_update_efdetail &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_effect_detail
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_effect_detial
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1bb]"></a>mcu_update_efsketch</STRONG> (Thumb, 194 bytes, Stack size 448 bytes, appfunction.o(i.mcu_update_efsketch))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = mcu_update_efsketch &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_effect_detail
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1ba]"></a>mcu_update_favoritesef_ranklist</STRONG> (Thumb, 42 bytes, Stack size 112 bytes, appfunction.o(i.mcu_update_favoritesef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mcu_update_favoritesef_ranklist &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_favoritesef_ranklist
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ef_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_effect_detail_handle
</UL>

<P><STRONG><a name="[1bd]"></a>mcu_update_one_efsketch</STRONG> (Thumb, 104 bytes, Stack size 440 bytes, appfunction.o(i.mcu_update_one_efsketch))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = mcu_update_one_efsketch &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_effect_detail
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1b9]"></a>mcu_update_originalef_ranklist</STRONG> (Thumb, 42 bytes, Stack size 112 bytes, appfunction.o(i.mcu_update_originalef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = mcu_update_originalef_ranklist &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_originalef_ranklist
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_ef_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_effect_detail_handle
</UL>

<P><STRONG><a name="[1c3]"></a>mcu_update_playdetail</STRONG> (Thumb, 48 bytes, Stack size 96 bytes, appfunction.o(i.mcu_update_playdetail))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = mcu_update_playdetail &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playdetail
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1bf]"></a>mcu_update_playlist_efsketch</STRONG> (Thumb, 194 bytes, Stack size 448 bytes, appfunction.o(i.mcu_update_playlist_efsketch))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = mcu_update_playlist_efsketch &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_effect_detail
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1be]"></a>mcu_update_playlist_ranklist</STRONG> (Thumb, 150 bytes, Stack size 280 bytes, appfunction.o(i.mcu_update_playlist_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = mcu_update_playlist_ranklist &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playlist_ranklist
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playlist_name
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_playlist_ranklist
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_com_playlist_ranklist
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_detial
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1c2]"></a>mcu_update_playstatus</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, appfunction.o(i.mcu_update_playstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mcu_update_playstatus &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksum_calculate
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_new_effect
</UL>

<P><STRONG><a name="[f6]"></a>mcu_update_switch_indicator</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, appfunction.o(i.mcu_update_switch_indicator))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mcu_update_switch_indicator &rArr; mcu_dp_bool_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update
</UL>

<P><STRONG><a name="[a4]"></a>mcu_update_switch_led</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, appfunction.o(i.mcu_update_switch_led))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mcu_update_switch_led &rArr; mcu_dp_bool_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_data_update
</UL>

<P><STRONG><a name="[11a]"></a>mcu_write_rtctime</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, protocol.o(i.mcu_write_rtctime))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mcu_write_rtctime &rArr; write_local_rtc_time &rArr; RTC_HEX_To_BCD &rArr; HEX_To_BCD &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_local_rtc_time
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[f4]"></a>move_data_to_first_in_list</STRONG> (Thumb, 72 bytes, Stack size 80 bytes, play.o(i.move_data_to_first_in_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = move_data_to_first_in_list &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_play_list
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_free_effect
</UL>

<P><STRONG><a name="[1df]"></a>my_memcpy</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, mcu_api.o(i.my_memcpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = my_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_module_time_serve_result
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_buffer
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_service
</UL>

<P><STRONG><a name="[18e]"></a>my_strcmp</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, mcu_api.o(i.my_strcmp))
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_first_ota_status
</UL>

<P><STRONG><a name="[1e8]"></a>my_strlen</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mcu_api.o(i.my_strlen))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_info_update
</UL>

<P><STRONG><a name="[c6]"></a>norflash_data_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.norflash_data_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 1648 + Unknown Stack Size
<LI>Call Chain = norflash_data_init &rArr; verify_factoryreset_effect_norflash &rArr; factoryreset_norflash &rArr; schedule_factory_reset &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_ranklist
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_factoryreset_effect_norflash
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_norflash_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[177]"></a>norflash_reset_to_zreo</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, user_memory.o(i.norflash_reset_to_zreo))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = norflash_reset_to_zreo &rArr; FLASH_ChipErase &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ChipErase
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
</UL>

<P><STRONG><a name="[1de]"></a>open_module_reset_state_serve</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mcu_api.o(i.open_module_reset_state_serve))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = open_module_reset_state_serve &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_module_init
</UL>

<P><STRONG><a name="[11d]"></a>open_module_time_serve_result</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, protocol.o(i.open_module_time_serve_result))
<BR><BR>[Stack]<UL><LI>Max Depth = 1408 + Unknown Stack Size
<LI>Call Chain = open_module_time_serve_result &rArr; factoryreset_norflash &rArr; schedule_factory_reset &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_restart
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_byte
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[1e1]"></a>permute_list_in_random</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, play.o(i.permute_list_in_random))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = permute_list_in_random &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_number
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_playmode
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_play_list
</UL>

<P><STRONG><a name="[1e2]"></a>play_current_effect</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, play.o(i.play_current_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;preprocess_play_effect
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_local_effect_data
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_new_effect
</UL>

<P><STRONG><a name="[1ae]"></a>play_effect_video</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, play.o(i.play_effect_video))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = play_effect_video &rArr; transmit_playdata_COLOR &rArr; transmit_protocol_frame &rArr; transmit_buffer_data &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turn_off_all_salve_light
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;effect_play_color_calu
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_playdata_COLOR
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e7]"></a>play_frame_reset</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, play.o(i.play_frame_reset))
<BR><BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;preprocess_play_effect
</UL>

<P><STRONG><a name="[1c6]"></a>play_free_effect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, play.o(i.play_free_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = play_free_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_new_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[c9]"></a>play_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, play.o(i.play_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = play_init &rArr; switch_playlist &rArr; start_play_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_playlist
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[1e5]"></a>play_new_effect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, play.o(i.play_new_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playstatus
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_current_play_efdetail
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_current_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_free_effect
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_effect
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_free_effect
</UL>

<P><STRONG><a name="[174]"></a>play_preview_effect</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, play.o(i.play_preview_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = play_preview_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;preprocess_play_effect
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_preview_effect_data
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_preview_effect_mode
</UL>

<P><STRONG><a name="[ca]"></a>play_sys_effect_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, play.o(i.play_sys_effect_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = play_sys_effect_init &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[1e3]"></a>preprocess_play_effect</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, play.o(i.preprocess_play_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_frame_reset
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_play_video_buffer
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;figure_slave_run_number_in_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_preview_effect
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_current_effect
</UL>

<P><STRONG><a name="[1b1]"></a>print_all_clock_detail</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_all_clock_detail))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_clock_detial
</UL>

<P><STRONG><a name="[1af]"></a>print_clock_detial</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_clock_detial))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_clock_detial
</UL>

<P><STRONG><a name="[1b6]"></a>print_com_effect_detial_log</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_com_effect_detial_log))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_effect_preview
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_effect_detail_handle
</UL>

<P><STRONG><a name="[1ce]"></a>print_com_playdetial</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_com_playdetial))
<BR><BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_detial
</UL>

<P><STRONG><a name="[1d9]"></a>print_com_playlist_ranklist</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_com_playlist_ranklist))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_ranklist
</UL>

<P><STRONG><a name="[17d]"></a>print_direction</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_direction))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;figure_slave_run_number_in_direction
</UL>

<P><STRONG><a name="[10e]"></a>print_ef_ranklist</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_ef_ranklist))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_original_ef
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_built_in_ef_to_norflash
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_originalef_ranklist
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_favoritesef_ranklist
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_allef_ranklist
</UL>

<P><STRONG><a name="[1d6]"></a>print_effect_detial</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_effect_detial))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_efdetail
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_current_play_efdetail
</UL>

<P><STRONG><a name="[ee]"></a>print_get_ef_detial</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_get_ef_detial))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_original_ef
</UL>

<P><STRONG><a name="[e6]"></a>print_get_favorites_ef_ranklist</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_get_favorites_ef_ranklist))
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_favorites_ef
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_favorites_ef
</UL>

<P><STRONG><a name="[21a]"></a>print_local_rtc_time</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_local_rtc_time))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_local_rtc_time
</UL>

<P><STRONG><a name="[17e]"></a>print_mini_device_data</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_mini_device_data))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;figure_slave_run_number_in_direction
</UL>

<P><STRONG><a name="[1f3]"></a>print_online_slave_data</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_online_slave_data))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_online_data_init
</UL>

<P><STRONG><a name="[19a]"></a>print_playdetial</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_playdetial))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_default_playlist
</UL>

<P><STRONG><a name="[1d8]"></a>print_playlist_ranklist</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_playlist_ranklist))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_playlist_ranklist
</UL>

<P><STRONG><a name="[1cd]"></a>print_playstatus</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_playstatus))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_control_detial
</UL>

<P><STRONG><a name="[1b4]"></a>print_slave_data</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.print_slave_data))
<BR><BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_device_detail
</UL>

<P><STRONG><a name="[10a]"></a>printhex_my</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, printlog.o(i.printhex_my))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dataverify
</UL>

<P><STRONG><a name="[1ad]"></a>process_mic_data</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, mic.o(i.process_mic_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = process_mic_data &rArr; convert_bright_in_range &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gradual_Change
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sound_intensity
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_average
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;convert_bright_in_range
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1aa]"></a>random_init</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, master.o(i.random_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = random_init &rArr; get_random_seed
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;refresh_random
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_seed
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c4]"></a>refresh_random</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, master.o(i.refresh_random))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_random_number
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_init
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Clock_Tick
</UL>

<P><STRONG><a name="[1b2]"></a>refresh_slave_data</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, slave.o(i.refresh_slave_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = refresh_slave_data
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_device_detail
</UL>

<P><STRONG><a name="[1c7]"></a>reload_current_play_list</STRONG> (Thumb, 182 bytes, Stack size 112 bytes, play.o(i.reload_current_play_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = reload_current_play_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playlist_ranklist
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playdetail
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;end_play_list
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_effect
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_dataindex_in_list
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_detial
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[10d]"></a>reset_built_in_effect</STRONG> (Thumb, 274 bytes, Stack size 208 bytes, user_memory.o(i.reset_built_in_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = reset_built_in_effect &rArr; save_effect &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_effect
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_built_in_ef_to_norflash
</UL>

<P><STRONG><a name="[172]"></a>resume_play_effect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, play.o(i.resume_play_effect))
<BR><BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_playing_effect_mode
</UL>

<P><STRONG><a name="[2a]"></a>IRQ22_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rtc_user.o(i.rtc_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ22_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1ed]"></a>rtc_interrupt</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, rtc_user.o(i.rtc_interrupt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_callback_constperiod
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_callback_alarm
</UL>

<P><STRONG><a name="[df]"></a>save_all_schedule</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.save_all_schedule))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_clock_list
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_schedule
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_clock_schedule
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;schedule_factory_reset
</UL>

<P><STRONG><a name="[1b3]"></a>save_all_slave_data</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, user_memory.o(i.save_all_slave_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = save_all_slave_data &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_device_detail
</UL>

<P><STRONG><a name="[eb]"></a>save_allef_ranklist</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.save_allef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = save_allef_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_original_ef
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_built_in_ef_to_norflash
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_all_ef_ranklist
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_original_ef
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_allef_ranklist
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_norflash_ranklist
</UL>

<P><STRONG><a name="[ff]"></a>save_device_identify</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, user_memory.o(i.save_device_identify))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = save_device_identify &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_device_identify
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_device_indentify
</UL>

<P><STRONG><a name="[e2]"></a>save_effect</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, user_memory.o(i.save_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = save_effect &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_built_in_effect
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_original_ef
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_favorites_ef
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_original_ef
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_favorites_ef
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_built_in_effect
</UL>

<P><STRONG><a name="[17b]"></a>save_effect_verify</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, user_memory.o(i.save_effect_verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = save_effect_verify &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
</UL>

<P><STRONG><a name="[e5]"></a>save_favoritesef_ranklist</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.save_favoritesef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = save_favoritesef_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_original_ef
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_favorites_ef
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_all_ef_ranklist
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_favorites_ef
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_favoritesef_ranklist
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_norflash_ranklist
</UL>

<P><STRONG><a name="[1f0]"></a>save_global_brightness_set</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, user_memory.o(i.save_global_brightness_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = save_global_brightness_set &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_global_setting
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_global_brightness
</UL>

<P><STRONG><a name="[199]"></a>save_global_setting</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.save_global_setting))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_switch_mic
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_switch_indicator
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_brightness_auto
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_bright_val
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_auto_brightness_switch
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_auto_brightness_mode
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_global_brightness_set
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_default_global_setting
</UL>

<P><STRONG><a name="[ed]"></a>save_originalef_ranklist</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.save_originalef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = save_originalef_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_original_ef
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_all_ef_ranklist
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_original_ef
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_originalef_ranklist
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_norflash_ranklist
</UL>

<P><STRONG><a name="[f0]"></a>save_playdetail</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, user_memory.o(i.save_playdetail))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = save_playdetail &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_playlist
</UL>

<P><STRONG><a name="[f2]"></a>save_playlist_ranklist</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, user_memory.o(i.save_playlist_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = save_playlist_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPI_Insert
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_playlist
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_playlist_ranklist
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;add_playlist
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_playlist_ranklist
</UL>

<P><STRONG><a name="[178]"></a>schedule_factory_reset</STRONG> (Thumb, 28 bytes, Stack size 760 bytes, factory.o(i.schedule_factory_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112<LI>Call Chain = schedule_factory_reset &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_all_schedule
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
</UL>

<P><STRONG><a name="[1ea]"></a>search_dataindex_in_list</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, master.o(i.search_dataindex_in_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = search_dataindex_in_list
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reload_current_play_list
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_free_effect
</UL>

<P><STRONG><a name="[1db]"></a>search_norflash_ranklist</STRONG> (Thumb, 338 bytes, Stack size 272 bytes, user_memory.o(i.search_norflash_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = search_norflash_ranklist &rArr; save_originalef_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_originalef_ranklist
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_favoritesef_ranklist
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_allef_ranklist
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_originalef_ranklist
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_favoritesef_ranklist
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_allef_ranklist
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_same_ranklist
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_data_init
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_factoryreset_effect_norflash
</UL>

<P><STRONG><a name="[1d2]"></a>set_firmware_download_finish_flag</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, master.o(i.set_firmware_download_finish_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = set_firmware_download_finish_flag &rArr; FlashROM_Insert &rArr; FlashROM_BufferRead &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_Insert
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_firmware_download
</UL>

<P><STRONG><a name="[1d3]"></a>set_firmware_downloading_flag</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, master.o(i.set_firmware_downloading_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = set_firmware_downloading_flag &rArr; FlashROM_Insert &rArr; FlashROM_BufferRead &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_Insert
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_firmware_download
</UL>

<P><STRONG><a name="[1d1]"></a>set_firmware_update_flag</STRONG> (Thumb, 30 bytes, Stack size 32 bytes, newota.o(i.set_firmware_update_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = set_firmware_update_flag &rArr; FlashROM_Insert &rArr; FlashROM_BufferRead &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_Insert
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_firmware_download
</UL>

<P><STRONG><a name="[ab]"></a>set_global_brightness</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, master.o(i.set_global_brightness))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = set_global_brightness &rArr; save_global_brightness_set &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_update_bright_val
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_global_brightness_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
</UL>

<P><STRONG><a name="[1cf]"></a>set_wifi_uart_buffer</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, system.o(i.set_wifi_uart_buffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = set_wifi_uart_buffer &rArr; my_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_info_update
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_string_update
</UL>

<P><STRONG><a name="[196]"></a>set_wifi_uart_byte</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system.o(i.set_wifi_uart_byte))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heat_beat_check
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_package_choose
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_module_time_serve_result
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_module_reset_state_serve
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_string_update
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
</UL>

<P><STRONG><a name="[1f2]"></a>slave_light_in_turn</STRONG> (Thumb, 228 bytes, Stack size 176 bytes, slave.o(i.slave_light_in_turn))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = slave_light_in_turn &rArr; transmit_protocol_frame &rArr; transmit_buffer_data &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayMS
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_protocol_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_online_data_init
</UL>

<P><STRONG><a name="[c7]"></a>slave_online_data_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, slave.o(i.slave_online_data_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = slave_online_data_init &rArr; turn_off_all_salve_light &rArr; transmit_playsame_RGBbr &rArr; transmit_protocol_frame &rArr; transmit_buffer_data &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turn_off_all_salve_light
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_online_slave_data
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_light_in_turn
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;generate_virtual_device
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[106]"></a>start_clock_task</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, master.o(i.start_clock_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = start_clock_task &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_server
</UL>

<P><STRONG><a name="[1f4]"></a>start_play_list</STRONG> (Thumb, 112 bytes, Stack size 88 bytes, play.o(i.start_play_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = start_play_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playdetail
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;permute_list_in_random
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_effect
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_playlist
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_ef_in_list
</UL>

<P><STRONG><a name="[1cc]"></a>switch_cyclemode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, play.o(i.switch_cyclemode))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_control_detial
</UL>

<P><STRONG><a name="[1e6]"></a>switch_effect</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, play.o(i.switch_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_new_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_sys_effect_init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reload_current_play_list
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_last_ef_in_list
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_play_list
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_ef_in_list
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_clock_task
</UL>

<P><STRONG><a name="[1f5]"></a>switch_last_ef_in_list</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, play.o(i.switch_last_ef_in_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = switch_last_ef_in_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_lastnext_effect
</UL>

<P><STRONG><a name="[1ca]"></a>switch_lastnext_effect</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, play.o(i.switch_lastnext_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = switch_lastnext_effect &rArr; switch_next_ef_in_list &rArr; start_play_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_last_ef_in_list
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_next_ef_in_list
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_control_detial
</UL>

<P><STRONG><a name="[fb]"></a>switch_next_ef_in_list</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, play.o(i.switch_next_ef_in_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = switch_next_ef_in_list &rArr; start_play_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_play_list
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_effect
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;autoswitch_effects_in_list
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_lastnext_effect
</UL>

<P><STRONG><a name="[a6]"></a>switch_next_free_effect</STRONG> (Thumb, 156 bytes, Stack size 264 bytes, master.o(i.switch_next_free_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = switch_next_free_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_effect_detail
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_allef_ranklist
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_new_effect
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_data_to_first_in_list
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;invert_list
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_dataindex_in_list
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyS_Click
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;change_rhythm_mode
</UL>

<P><STRONG><a name="[1c0]"></a>switch_playlist</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, play.o(i.switch_playlist))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = switch_playlist &rArr; start_play_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playlist_ranklist
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_play_list
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_control_detial
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1cb]"></a>switch_playmode</STRONG> (Thumb, 72 bytes, Stack size 88 bytes, play.o(i.switch_playmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = switch_playmode &rArr; adjust_play_list &rArr; move_data_to_first_in_list &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playdetail
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;permute_list_in_random
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adjust_play_list
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_control_detial
</UL>

<P><STRONG><a name="[c5]"></a>sys_rundata_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, master.o(i.sys_rundata_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = sys_rundata_init &rArr; get_first_ota_status &rArr; clear_firmware_download_flag &rArr; FlashROM_Insert &rArr; FlashROM_BufferRead &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_first_ota_status
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Init
</UL>

<P><STRONG><a name="[1a8]"></a>sys_tick_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, master.o(i.sys_tick_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_tick_init &rArr; User_TM40_IntervalTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_TM40_IntervalTimer
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IT_Start
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[215]"></a>take_byte_rxbuff</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, system.o(i.take_byte_rxbuff))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_service
</UL>

<P><STRONG><a name="[1f8]"></a>transmit_buffer_data</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, play.o(i.transmit_buffer_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = transmit_buffer_data &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Enable
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Trigger
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Stop
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_protocol_frame
</UL>

<P><STRONG><a name="[1e4]"></a>transmit_playdata_COLOR</STRONG> (Thumb, 342 bytes, Stack size 208 bytes, play.o(i.transmit_playdata_COLOR))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = transmit_playdata_COLOR &rArr; transmit_protocol_frame &rArr; transmit_buffer_data &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_protocol_frame
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_effect_video
</UL>

<P><STRONG><a name="[1fb]"></a>transmit_playsame_RGBbr</STRONG> (Thumb, 70 bytes, Stack size 176 bytes, play.o(i.transmit_playsame_RGBbr))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = transmit_playsame_RGBbr &rArr; transmit_protocol_frame &rArr; transmit_buffer_data &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_protocol_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;turn_off_all_salve_light
</UL>

<P><STRONG><a name="[19f]"></a>transmit_protocol_frame</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, parse.o(i.transmit_protocol_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = transmit_protocol_frame &rArr; transmit_buffer_data &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_buffer_data
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_data_checksum
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_device_pairing_play
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_playsame_RGBbr
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_playdata_COLOR
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_light_in_turn
</UL>

<P><STRONG><a name="[1c5]"></a>turn_off_all_salve_light</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, play.o(i.turn_off_all_salve_light))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = turn_off_all_salve_light &rArr; transmit_playsame_RGBbr &rArr; transmit_protocol_frame &rArr; transmit_buffer_data &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transmit_playsame_RGBbr
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slave_online_data_init
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;play_effect_video
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>

<P><STRONG><a name="[1f]"></a>IRQ11_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, sci_user.o(i.uart0_interrupt_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ11_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1fd]"></a>uart0_interrupt_receive</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, sci_user.o(i.uart0_interrupt_receive), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Enable
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_callback_error
</UL>

<P><STRONG><a name="[1e]"></a>IRQ10_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, sci_user.o(i.uart0_interrupt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ10_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[1ff]"></a>uart0_interrupt_send</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, sci_user.o(i.uart0_interrupt_send), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_callback_sendend
</UL>

<P><STRONG><a name="[22]"></a>IRQ14_Handler</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, sci_user.o(i.uart1_interrupt_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IRQ14_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[206]"></a>uart1_interrupt_receive</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, sci_user.o(i.uart1_interrupt_receive), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_callback_softwareoverrun
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_callback_receiveend
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_callback_error
</UL>

<P><STRONG><a name="[21]"></a>IRQ13_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, sci_user.o(i.uart1_interrupt_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ13_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[209]"></a>uart1_interrupt_send</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, sci_user.o(i.uart1_interrupt_send), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_callback_sendend
</UL>

<P><STRONG><a name="[205]"></a>uart1_send_end</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, master.o(i.uart1_send_end), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_callback_sendend
</UL>

<P><STRONG><a name="[212]"></a>uart1_send_start</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, master.o(i.uart1_send_start))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_fifo_send_ISR
</UL>

<P><STRONG><a name="[1a3]"></a>uart_app_init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, master.o(i.uart_app_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = uart_app_init &rArr; __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Enable
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Receive
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Init
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_fifo_init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[202]"></a>uart_receive_input</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, mcu_api.o(i.uart_receive_input), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_callback_receiveend
</UL>

<P><STRONG><a name="[20b]"></a>uart_transmit_output</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, protocol.o(i.uart_transmit_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_data
</UL>

<P><STRONG><a name="[1b7]"></a>update_built_in_effect</STRONG> (Thumb, 40 bytes, Stack size 200 bytes, user_memory.o(i.update_built_in_effect))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = update_built_in_effect &rArr; save_effect &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_effect
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_effect_detail_handle
</UL>

<P><STRONG><a name="[117]"></a>upgrade_package_choose</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.upgrade_package_choose))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = upgrade_package_choose &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[78]"></a>us_delay</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_spi.o(i.us_delay))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ChipErase
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BufferRead
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_WritenEN
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForWriteEnd
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteReadByte
</UL>

<P><STRONG><a name="[20d]"></a>verify_allef_ranklist</STRONG> (Thumb, 84 bytes, Stack size 80 bytes, user_memory.o(i.verify_allef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = verify_allef_ranklist &rArr; save_allef_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_allef_ranklist
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_allef_ranklist
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_ranklist
</UL>

<P><STRONG><a name="[1dd]"></a>verify_factoryreset_effect_norflash</STRONG> (Thumb, 34 bytes, Stack size 264 bytes, user_memory.o(i.verify_factoryreset_effect_norflash))
<BR><BR>[Stack]<UL><LI>Max Depth = 1640 + Unknown Stack Size
<LI>Call Chain = verify_factoryreset_effect_norflash &rArr; factoryreset_norflash &rArr; schedule_factory_reset &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factoryreset_norflash
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_effect_verify
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_norflash_ranklist
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_data_init
</UL>

<P><STRONG><a name="[20e]"></a>verify_favoritesef_ranklist</STRONG> (Thumb, 84 bytes, Stack size 80 bytes, user_memory.o(i.verify_favoritesef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = verify_favoritesef_ranklist &rArr; save_favoritesef_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_favoritesef_ranklist
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_favoritesef_ranklist
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_ranklist
</UL>

<P><STRONG><a name="[20f]"></a>verify_originalef_ranklist</STRONG> (Thumb, 84 bytes, Stack size 80 bytes, user_memory.o(i.verify_originalef_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = verify_originalef_ranklist &rArr; save_originalef_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_originalef_ranklist
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_originalef_ranklist
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_ranklist
</UL>

<P><STRONG><a name="[210]"></a>verify_playlist_ranklist</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, user_memory.o(i.verify_playlist_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = verify_playlist_ranklist &rArr; save_playlist_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_playlist_ranklist
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_playlist_ranklist
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_ranklist
</UL>

<P><STRONG><a name="[1dc]"></a>verify_ranklist</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user_memory.o(i.verify_ranklist))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = verify_ranklist &rArr; verify_originalef_ranklist &rArr; save_originalef_ranklist &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_playlist_ranklist
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_originalef_ranklist
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_favoritesef_ranklist
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;verify_allef_ranklist
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;norflash_data_init
</UL>

<P><STRONG><a name="[f]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, wdt_user.o(i.wdt_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[211]"></a>wdt_interrupt</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wdt_user.o(i.wdt_interrupt), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Restart
</UL>

<P><STRONG><a name="[20a]"></a>wifi_fifo_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, master.o(i.wifi_fifo_init))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_app_init
</UL>

<P><STRONG><a name="[cc]"></a>wifi_fifo_send_ISR</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, master.o(i.wifi_fifo_send_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = wifi_fifo_send_ISR
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_start
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer40_Interrupt
</UL>

<P><STRONG><a name="[1a9]"></a>wifi_module_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, master.o(i.wifi_module_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = wifi_module_init &rArr; open_module_reset_state_serve &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_protocol_init
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_module_reset_state_serve
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[213]"></a>wifi_protocol_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, mcu_api.o(i.wifi_protocol_init))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_module_init
</UL>

<P><STRONG><a name="[1ac]"></a>wifi_service</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, master.o(i.wifi_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 2032 + Unknown Stack Size
<LI>Call Chain = wifi_service &rArr; wifi_uart_service &rArr; data_handle &rArr; data_point_handle &rArr; dp_download_handle &rArr; dp_download_issue_cmd_handle &rArr; mcu_download_issue_cmd_handle &rArr; delete_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_service
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11b]"></a>wifi_test_result</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, protocol.o(i.wifi_test_result))
<BR><BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[214]"></a>wifi_uart_service</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, mcu_api.o(i.wifi_uart_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 2024 + Unknown Stack Size
<LI>Call Chain = wifi_uart_service &rArr; data_handle &rArr; data_point_handle &rArr; dp_download_handle &rArr; dp_download_issue_cmd_handle &rArr; mcu_download_issue_cmd_handle &rArr; delete_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;with_data_rxbuff
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;take_byte_rxbuff
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sum
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_service
</UL>

<P><STRONG><a name="[115]"></a>wifi_uart_write_frame</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, system.o(i.wifi_uart_write_frame))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_data
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_check_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;product_info_update
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heat_beat_check
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mcu_wifi_mode
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;upgrade_package_choose
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_module_time_serve_result
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_module_reset_state_serve
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_reset_wifi
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_system_time
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_string_update
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
</UL>

<P><STRONG><a name="[216]"></a>with_data_rxbuff</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, system.o(i.with_data_rxbuff))
<BR><BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_service
</UL>

<P><STRONG><a name="[1da]"></a>write_local_rtc_time</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, master.o(i.write_local_rtc_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = write_local_rtc_time &rArr; RTC_HEX_To_BCD &rArr; HEX_To_BCD &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Set_CounterValue
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_HEX_To_BCD
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_local_rtc_time
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_write_rtctime
</UL>

<P><STRONG><a name="[24c]"></a>EraseChip</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, flash.o(ram_fetch_code), UNUSED)

<P><STRONG><a name="[83]"></a>EraseSector</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, flash.o(ram_fetch_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EraseSector
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_Insert
</UL>

<P><STRONG><a name="[84]"></a>ProgramPage</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, flash.o(ram_fetch_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ProgramPage
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashROM_Insert
</UL>

<P><STRONG><a name="[33]"></a>IRQ31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, flash_user.o(ram_fetch_code))
<BR>[Address Reference Count : 1]<UL><LI> startup_cms32l051.o(RESET)
</UL>
<P><STRONG><a name="[24d]"></a>flash_interrupt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, flash_user.o(ram_fetch_code), UNUSED)

<P><STRONG><a name="[21b]"></a>flash_write</STRONG> (Thumb, 278 bytes, Stack size 576 bytes, flash_user.o(ram_fetch_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramPage
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseSector
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[1a2]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, a5441_master.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;User_TM40_IntervalTimer
</UL>

<P><STRONG><a name="[129]"></a>dp_download_all_effect_ranklist_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_all_effect_ranklist_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_all_effect_ranklist_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[12b]"></a>dp_download_auto_brightness_mode_handle</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, protocol.o(i.dp_download_auto_brightness_mode_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = dp_download_auto_brightness_mode_handle &rArr; mcu_download_auto_brightness_mode &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_auto_brightness_mode
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_enum
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[12f]"></a>dp_download_auto_brightness_switch_handle</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, protocol.o(i.dp_download_auto_brightness_switch_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = dp_download_auto_brightness_switch_handle &rArr; mcu_download_auto_brightness_switch &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_auto_brightness_switch
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_bool
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[133]"></a>dp_download_bright_val_handle</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, protocol.o(i.dp_download_bright_val_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = dp_download_bright_val_handle &rArr; mcu_download_bright_val &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_bright_val
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_value
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[137]"></a>dp_download_brightness_auto_handle</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, protocol.o(i.dp_download_brightness_auto_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = dp_download_brightness_auto_handle &rArr; mcu_download_brightness_auto &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_brightness_auto
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_value
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[139]"></a>dp_download_clock_detial_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, protocol.o(i.dp_download_clock_detial_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176<LI>Call Chain = dp_download_clock_detial_handle &rArr; mcu_download_clock_detial &rArr; add_clock_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_clock_detial
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[13b]"></a>dp_download_clock_list_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, protocol.o(i.dp_download_clock_list_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136<LI>Call Chain = dp_download_clock_list_handle &rArr; mcu_download_clock_list &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_clock_list
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[13d]"></a>dp_download_colour_data_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_colour_data_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_colour_data_handle &rArr; mcu_dp_string_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_string_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[13f]"></a>dp_download_device_control_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, protocol.o(i.dp_download_device_control_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = dp_download_device_control_handle &rArr; mcu_download_device_control &rArr; light_device_pairing_play &rArr; transmit_protocol_frame &rArr; transmit_buffer_data &rArr; DMA_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_device_control
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[141]"></a>dp_download_device_detail_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, protocol.o(i.dp_download_device_detail_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = dp_download_device_detail_handle &rArr; mcu_download_device_detail &rArr; save_all_slave_data &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_device_detail
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[143]"></a>dp_download_effect_detial_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, protocol.o(i.dp_download_effect_detial_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = dp_download_effect_detial_handle &rArr; mcu_download_effect_detail_handle &rArr; update_built_in_effect &rArr; save_effect &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_effect_detail_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[145]"></a>dp_download_effect_list_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_effect_list_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_effect_list_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[146]"></a>dp_download_effect_num_handle</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, protocol.o(i.dp_download_effect_num_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dp_download_effect_num_handle &rArr; mcu_dp_value_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_value
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[147]"></a>dp_download_effect_preview_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, protocol.o(i.dp_download_effect_preview_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = dp_download_effect_preview_handle &rArr; mcu_download_effect_preview &rArr; enter_preview_effect_mode &rArr; play_preview_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_effect_preview
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[149]"></a>dp_download_effect_sketch_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_effect_sketch_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_effect_sketch_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[14a]"></a>dp_download_favorites_effect_ranklist_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_favorites_effect_ranklist_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_favorites_effect_ranklist_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[14b]"></a>dp_download_global_status_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_global_status_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_global_status_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[15a]"></a>dp_download_issue_cmd_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, protocol.o(i.dp_download_issue_cmd_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1904 + Unknown Stack Size
<LI>Call Chain = dp_download_issue_cmd_handle &rArr; mcu_download_issue_cmd_handle &rArr; delete_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_issue_cmd_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[159]"></a>dp_download_link_status_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_link_status_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_link_status_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[15b]"></a>dp_download_original_effect_ranklist_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_original_effect_ranklist_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_original_effect_ranklist_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[15d]"></a>dp_download_play_control_detial_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_play_control_detial_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_play_control_detial_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[150]"></a>dp_download_play_control_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, protocol.o(i.dp_download_play_control_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = dp_download_play_control_handle &rArr; mcu_download_play_control_detial &rArr; switch_playlist &rArr; start_play_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_control_detial
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[158]"></a>dp_download_play_detial_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, protocol.o(i.dp_download_play_detial_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = dp_download_play_detial_handle &rArr; mcu_download_play_detial &rArr; reload_current_play_list &rArr; switch_effect &rArr; play_new_effect &rArr; play_current_effect &rArr; preprocess_play_effect &rArr; figure_slave_run_number_in_direction &rArr; bubble_sort_location &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_play_detial
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[157]"></a>dp_download_play_list_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_play_list_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_play_list_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[14f]"></a>dp_download_playlist_effect_sketch_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_playlist_effect_sketch_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_playlist_effect_sketch_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[154]"></a>dp_download_playlist_num_handle</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, protocol.o(i.dp_download_playlist_num_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dp_download_playlist_num_handle &rArr; mcu_dp_value_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_value
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[15c]"></a>dp_download_playlist_ranklist_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_playlist_ranklist_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_playlist_ranklist_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[165]"></a>dp_download_reserved10_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_reserved10_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_reserved10_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[15e]"></a>dp_download_reserved3_handle</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, protocol.o(i.dp_download_reserved3_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = dp_download_reserved3_handle &rArr; mcu_download_reserved3 &rArr; mcu_download_device_indentify &rArr; save_device_identify &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_reserved3
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[15f]"></a>dp_download_reserved4_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_reserved4_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_reserved4_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[160]"></a>dp_download_reserved5_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_reserved5_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_reserved5_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[161]"></a>dp_download_reserved6_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_reserved6_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_reserved6_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[162]"></a>dp_download_reserved7_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_reserved7_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_reserved7_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[163]"></a>dp_download_reserved8_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_reserved8_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_reserved8_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[164]"></a>dp_download_reserved9_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_reserved9_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_reserved9_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[156]"></a>dp_download_running_state_handle</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, protocol.o(i.dp_download_running_state_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dp_download_running_state_handle &rArr; mcu_dp_value_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_value
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[153]"></a>dp_download_switch_indicator_handle</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, protocol.o(i.dp_download_switch_indicator_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = dp_download_switch_indicator_handle &rArr; mcu_download_switch_indicator &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_switch_indicator
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_bool
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[14c]"></a>dp_download_switch_led_handle</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, protocol.o(i.dp_download_switch_led_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dp_download_switch_led_handle &rArr; mcu_dp_bool_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_switch_led
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_bool
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[152]"></a>dp_download_switch_mic_handle</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, protocol.o(i.dp_download_switch_mic_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = dp_download_switch_mic_handle &rArr; mcu_download_switch_mic &rArr; save_global_setting &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_download_switch_mic
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_bool
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_bool_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[155]"></a>dp_download_system_state_handle</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, protocol.o(i.dp_download_system_state_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dp_download_system_state_handle &rArr; mcu_dp_value_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_value
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[14e]"></a>dp_download_temp_value_handle</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, protocol.o(i.dp_download_temp_value_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dp_download_temp_value_handle &rArr; mcu_dp_value_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_value
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_value_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[151]"></a>dp_download_user_protocol_handle</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, protocol.o(i.dp_download_user_protocol_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = dp_download_user_protocol_handle &rArr; mcu_dp_raw_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_raw_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[14d]"></a>dp_download_work_mode_handle</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, protocol.o(i.dp_download_work_mode_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dp_download_work_mode_handle &rArr; mcu_dp_enum_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_get_dp_download_enum
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mcu_dp_enum_update
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>

<P><STRONG><a name="[116]"></a>data_point_handle</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, system.o(i.data_point_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1960 + Unknown Stack Size
<LI>Call Chain = data_point_handle &rArr; dp_download_handle &rArr; dp_download_issue_cmd_handle &rArr; mcu_download_issue_cmd_handle &rArr; delete_schedule &rArr; save_all_schedule &rArr; FlashSPI_Insert &rArr; FLASH_PageWrite &rArr; Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_dowmload_dpid_index
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dp_download_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[11e]"></a>get_dowmload_dpid_index</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, system.o(i.get_dowmload_dpid_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_dowmload_dpid_index
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_download_cmd_total
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_point_handle
</UL>

<P><STRONG><a name="[114]"></a>get_mcu_wifi_mode</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, system.o(i.get_mcu_wifi_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = get_mcu_wifi_mode &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[112]"></a>heat_beat_check</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, system.o(i.heat_beat_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = heat_beat_check &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[113]"></a>product_info_update</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, system.o(i.product_info_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = product_info_update &rArr; wifi_uart_write_frame &rArr; wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_wifi_uart_buffer
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_handle
</UL>

<P><STRONG><a name="[218]"></a>wifi_uart_write_data</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, system.o(i.wifi_uart_write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = wifi_uart_write_data &rArr; uart_transmit_output &rArr; UART1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_transmit_output
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wifi_uart_write_frame
</UL>

<P><STRONG><a name="[d3]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sci.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Start
</UL>

<P><STRONG><a name="[98]"></a>iic20_callback_master_error</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.iic20_callback_master_error))
<BR><BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ07_Handler
</UL>

<P><STRONG><a name="[9b]"></a>iic20_callback_master_receiveend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sci_user.o(i.iic20_callback_master_receiveend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iic20_callback_master_receiveend
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC20_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ07_Handler
</UL>

<P><STRONG><a name="[9a]"></a>iic20_callback_master_sendend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sci_user.o(i.iic20_callback_master_sendend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iic20_callback_master_sendend
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC20_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ07_Handler
</UL>

<P><STRONG><a name="[9c]"></a>iic21_callback_master_error</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.iic21_callback_master_error))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ08_Handler
</UL>

<P><STRONG><a name="[9f]"></a>iic21_callback_master_receiveend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sci_user.o(i.iic21_callback_master_receiveend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iic21_callback_master_receiveend
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC21_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ08_Handler
</UL>

<P><STRONG><a name="[9e]"></a>iic21_callback_master_sendend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sci_user.o(i.iic21_callback_master_sendend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = iic21_callback_master_sendend
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC21_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ08_Handler
</UL>

<P><STRONG><a name="[1fe]"></a>uart0_callback_error</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.uart0_callback_error), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_interrupt_receive
</UL>

<P><STRONG><a name="[200]"></a>uart0_callback_sendend</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.uart0_callback_sendend), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_interrupt_send
</UL>

<P><STRONG><a name="[207]"></a>uart1_callback_error</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.uart1_callback_error), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_interrupt_receive
</UL>

<P><STRONG><a name="[201]"></a>uart1_callback_receiveend</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sci_user.o(i.uart1_callback_receiveend), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_receive_input
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_Receive
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_interrupt_receive
</UL>

<P><STRONG><a name="[204]"></a>uart1_callback_sendend</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sci_user.o(i.uart1_callback_sendend), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_end
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_interrupt_send
</UL>

<P><STRONG><a name="[208]"></a>uart1_callback_softwareoverrun</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sci_user.o(i.uart1_callback_softwareoverrun), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_interrupt_receive
</UL>

<P><STRONG><a name="[6f]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, adc.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Stop
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Start
</UL>

<P><STRONG><a name="[a2]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtc.o(i.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Start
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IT_Start
</UL>

<P><STRONG><a name="[19b]"></a>it_callback</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtc_user.o(i.it_callback), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;it_callback_Handle
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;it_interrupt
</UL>

<P><STRONG><a name="[1ee]"></a>rtc_callback_alarm</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtc_user.o(i.rtc_callback_alarm), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_interrupt
</UL>

<P><STRONG><a name="[1ef]"></a>rtc_callback_constperiod</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtc_user.o(i.rtc_callback_constperiod), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_interrupt
</UL>

<P><STRONG><a name="[76]"></a>FLASH_WaitForWriteEnd</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, driver_w25qxx.o(i.FLASH_WaitForWriteEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FLASH_WaitForWriteEnd &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_delay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25_CS
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ChipErase
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
</UL>

<P><STRONG><a name="[75]"></a>Flash_WritenEN</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, driver_w25qxx.o(i.Flash_WritenEN))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Flash_WritenEN &rArr; SPI_WriteReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;us_delay
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25_CS
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WriteReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageWrite
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ChipErase
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_BlockErase
</UL>

<P><STRONG><a name="[38]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[6c]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[58]"></a>_printf_truncate_signed</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[59]"></a>_printf_truncate_unsigned</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>
<HR></body></html>
