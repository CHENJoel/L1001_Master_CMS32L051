/*
 * @Author: error: git config user.name && git config user.email & please set dead value or install git
 * @Date: 2022-06-11 15:59:50
 * @LastEditors: DESKTOP-AKTRQKB\MY sandote@163.com
 * @LastEditTime: 2023-12-07 13:58:31
 * @FilePath: \A5441_Master_CMS32L051\Project\USER\Include\fft.h
 * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE
 */
#ifndef _FFT_H_
#define _FFT_H_

#include "Function_Init.H"


/**************************************************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************************************************/

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // typedef struct compx
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // {
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // 	float real;
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // 	float imag;
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // }compx;
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // extern struct compx dd[65]; //FFT数据
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // extern struct compx temp_dd;

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // extern uchar  LEDBuf[35];	  //15列；从左到右；亮的位为真（1）；
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // extern const float iw[64];

// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //复数乘法
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // void ee(struct compx b1,uint8_t data b2);
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //乘方函数
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // uint mypow(uint8_t data nbottom,uint8_t data ntop);
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //快速傅立叶变换
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // void fft(struct compx *xin,uint8_t data N);
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //完成显示数据的转换工作,包括顶点下落速度控制以及顶点更新定格
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // //对fft数据进行处理,得到各个频率段的电压幅值
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // void processfft(void);

/**************************************************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************************************************/
/**************************************************************************************************************************************************************************************************************************/




#include <math.h>

#define PI				3.14159265358979323846264338327950288419716939937510	//圆周率

#define FFT_N			32		//傅里叶变换的点数 

#define FFT_RESULT(x) 	(sqrt(data_of_N_FFT[x].real*data_of_N_FFT[x].real+data_of_N_FFT[x].imag*data_of_N_FFT[x].imag)/ (FFT_N >> (x != 0)))
#define FFT_Hz(x, Sample_Frequency)		((double)(x * Sample_Frequency) / FFT_N)

#define IFFT_RESULT(x)	(data_of_N_FFT[x].real / FFT_N)

typedef struct						//定义复数结构体 
{
	double real, imag;
}Complex;

extern Complex data_of_N_FFT[];	
extern double SIN_TABLE_of_N_FFT[];

void Init_FFT(void);
void FFT(void);
void IFFT(void);
void Refresh_Data(int id, double wave_data);


void abs_fft(void);
// #endif // !FFT_H_



#endif

